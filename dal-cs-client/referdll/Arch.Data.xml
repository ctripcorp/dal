<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Arch.Data</name>
    </assembly>
    <members>
        <member name="T:Arch.Data.Orm.sql.SqlTable">
            <summary>
            
            </summary>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlTable.Insert(System.String,System.Collections.ICollection,System.Collections.IDictionary)">
            <summary>
            
            </summary>
            <param name="logicDbName"></param>
            <param name="items"></param>
            <param name="statementParams"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlTable.BuckInsert(System.String,System.Collections.ICollection,System.Collections.IDictionary)">
            <summary>
            
            </summary>
            <param name="logicDbName"></param>
            <param name="items"></param>
            <param name="extendParams"> </param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlTable.Update(System.String,System.Collections.ICollection,System.Collections.IDictionary)">
            <summary>
            
            </summary>
            <param name="logicDbName"></param>
            <param name="items"></param>
            <param name="statementParams"> </param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlTable.Delete(System.String,System.Collections.ICollection,System.Collections.IDictionary)">
            <summary>
            
            </summary>
            <param name="logicDbName"></param>
            <param name="items"></param>
            <param name="statementParams"> </param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlTable.Select1(System.String,System.String,System.Collections.IDictionary,System.Collections.IList,System.Nullable{Arch.Data.DbEngine.OperationType})">
            <summary>
            
            </summary>
            <param name="logicDbName"></param>
            <param name="strSql"></param>
            <param name="parameters"></param>
            <param name="list"></param>
            <param name="operationType"></param>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlTable.Select(System.String,System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IList,System.Collections.IDictionary,System.Nullable{Arch.Data.DbEngine.OperationType})">
            <summary>
            
            </summary>
            <param name="logicDbName"></param>
            <param name="strSql"></param>
            <param name="parameters"></param>
            <param name="list"></param>
            <param name="statementParams"> </param>
            <param name="operationType"></param>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlTable.SelectFirst(System.String,System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Object@,System.Collections.IDictionary,System.Nullable{Arch.Data.DbEngine.OperationType})">
            <summary>
            
            </summary>
            <param name="logicDbName"></param>
            <param name="strSql"></param>
            <param name="parameters"></param>
            <param name="item"></param>
            <param name="extendParams"> </param>
            <param name="operationType"></param>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlTable.Select(System.String,Arch.Data.Orm.IQuery,System.Collections.IList,System.Collections.IDictionary,System.Nullable{Arch.Data.DbEngine.OperationType})">
            <summary>
            
            </summary>
            <param name="logicDbName"></param>
            <param name="query"></param>
            <param name="list"></param>
            <param name="extendParams"> </param>
            <param name="operationType"></param>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlTable.Get(System.String,System.Object,System.Collections.IDictionary,System.Nullable{Arch.Data.DbEngine.OperationType})">
            <summary>
            
            </summary>
            <param name="logicDbName"></param>
            <param name="key"></param>
            <param name="statementParams"> </param>
            <param name="operationType"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlTable.GetAll(System.String,System.Collections.IList,System.Collections.IDictionary,System.Nullable{Arch.Data.DbEngine.OperationType})">
            <summary>
            
            </summary>
            <param name="logicDbName"></param>
            <param name="list"> </param>
            <param name="statementParams"> </param>
            <param name="operationType"></param>
            <exception cref="T:Arch.Data.DalException"></exception>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlTable.Exec1(System.String,System.String,System.Object[],System.Collections.IList,System.Nullable{Arch.Data.DbEngine.OperationType})">
            <summary>
            
            </summary>
            <param name="logicDbName"></param>
            <param name="procName"></param>
            <param name="parameters"></param>
            <param name="list"></param>
            <param name="operationType"></param>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlTable.Exec(System.String,System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IList,System.Collections.IDictionary,System.Nullable{Arch.Data.DbEngine.OperationType})">
            <summary>
            
            </summary>
            <param name="logicDbName"></param>
            <param name="procName"></param>
            <param name="parameters"></param>
            <param name="list"></param>
            <param name="statementParams"> </param>
            <param name="operationType"></param>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlTable.GetAllStatement(System.String,System.Collections.IDictionary,System.Nullable{Arch.Data.DbEngine.OperationType})">
            <summary>
            获取所有记录的指令
            </summary>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlTable.GetFindByKeyStatement(System.String,System.Collections.IDictionary,System.Object,System.Nullable{Arch.Data.DbEngine.OperationType})">
            <summary>
            
            </summary>
            <param name="logicDbName"></param>
            <param name="statementParams"> </param>
            <param name="key"></param>
            <param name="operationType"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlTable.GetInsertSqlStatement(System.Collections.ICollection,System.String,System.Collections.IDictionary)">
            <summary>
            插入单条记录
            </summary>
            <param name="items">集合对象</param>
            <param name="logicDbName">数据库逻辑名称</param>
            <param name="extendParams"> </param>
            <returns>插入指令</returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlTable.GetBuckInsertSqlStatement(System.Collections.ICollection,System.String,System.Collections.IDictionary)">
            <summary>
            
            </summary>
            <param name="items"></param>
            <param name="logicDbName"></param>
            <param name="extendParams"> </param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlTable.GetUpdateSqlStatement(System.Collections.ICollection,System.String,System.Collections.IDictionary)">
            <summary>
            
            </summary>
            <param name="items"></param>
            <param name="logicDbName"></param>
            <param name="extendParams"> </param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlTable.GetDeleteSqlStatement(System.Collections.ICollection,System.String,System.Collections.IDictionary)">
            <summary>
            
            </summary>
            <param name="items"></param>
            <param name="logicDbName"></param>
            <param name="statementParams"> </param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlTable.GetSelectSqlStatement(System.String,System.String,System.Collections.IDictionary,System.Nullable{Arch.Data.DbEngine.OperationType})">
            <summary>
            
            </summary>
            <param name="logicDbName"></param>
            <param name="strSql"></param>
            <param name="values"></param>
            <param name="operationType"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlTable.GetSqlStatement(System.String,System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IDictionary,System.Nullable{Arch.Data.DbEngine.OperationType})">
            <summary>
            
            </summary>
            <param name="logicDbName"></param>
            <param name="strSql"></param>
            <param name="parameters"></param>
            <param name="extendParams"> </param>
            <param name="operationType"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlTable.GetProcStatement(System.String,System.String,System.Object[],System.Nullable{Arch.Data.DbEngine.OperationType})">
            <summary>
            
            </summary>
            <param name="logicDbName"></param>
            <param name="procName"></param>
            <param name="parameters"></param>
            <param name="operationType"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlTable.GetFuncationStatement(System.String,System.String,System.Object[],System.Nullable{Arch.Data.DbEngine.OperationType})">
            <summary>
            
            </summary>
            <param name="logicDbName"></param>
            <param name="procName"></param>
            <param name="parameters"></param>
            <param name="operationType"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlTable.GetProcStatement(System.String,System.String,System.Object,System.Nullable{Arch.Data.DbEngine.OperationType})">
            <summary>
            
            </summary>
            <param name="logicDbName"></param>
            <param name="procName"></param>
            <param name="parameter"></param>
            <param name="operationType"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlTable.GetProcStatement(System.String,System.String,System.Object[],System.Int32[],System.Nullable{Arch.Data.DbEngine.OperationType})">
            <summary>
            
            </summary>
            <param name="logicDbName"></param>
            <param name="procName"></param>
            <param name="parameters"></param>
            <param name="outputs"></param>
            <param name="operationType"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlTable.GetSpStatement(System.String,System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IDictionary,System.Nullable{Arch.Data.DbEngine.OperationType})">
            <summary>
            
            </summary>
            <param name="logicDbName"></param>
            <param name="procName"></param>
            <param name="parames"></param>
            <param name="extendParams"> </param>
            <param name="operationType"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlTable.GetScalarStatement(System.String,System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IDictionary,System.Nullable{Arch.Data.DbEngine.OperationType})">
            <summary>
            
            </summary>
            <param name="logicDbName"></param>
            <param name="sql"></param>
            <param name="parames"></param>
            <param name="extendParams"></param>
            <param name="operationType"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlTable.GetQueryStatment(System.String,Arch.Data.Orm.IQuery,System.Collections.IDictionary,System.Nullable{Arch.Data.DbEngine.OperationType})">
            <summary>
            
            </summary>
            <param name="logicDbName"></param>
            <param name="query"></param>
            <param name="extendParams"> </param>
            <param name="operationType"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlTable.GetSp3Statement(System.String,System.String,System.Object,Arch.Data.Orm.sql.SqlTable.DataOptionType)">
            <summary>
            
            </summary>
            <param name="logicDbName"></param>
            <param name="procName"></param>
            <param name="item"></param>
            <param name="dataOp"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlTable.FillByName(System.Data.IDataReader,System.Collections.IList)">
            <summary>
            根据列名填充集合
            </summary>
            <param name="reader"></param>
            <param name="list"></param>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlTable.FillDataTableByName(System.Data.DataTable,System.Collections.IList)">
            <summary>
            
            </summary>
            <param name="dt"></param>
            <param name="list"></param>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlTable.FillFirstByName(System.Data.IDataReader,System.Object@)">
            <summary>
            
            </summary>
            <param name="reader"></param>
            <param name="obj"></param>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlTable.FillFirstDataTableByName(System.Data.DataTable,System.Object@)">
            <summary>
            
            </summary>
            <param name="dt"></param>
            <param name="obj"></param>
        </member>
        <member name="M:Arch.Data.Orm.FastInvoker.OpCodesFactory.GetLdc_I4(System.Int32)">
            <summary>
            压入整数堆栈方法
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.FastInvoker.OpCodesFactory.GetLdelem(System.Type)">
            <summary>
            根据传入的数据类型，获取数组元素的op
            </summary>
            <param name="reflectType"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.FastInvoker.OpCodesFactory.BoxIfNeeded(System.Reflection.Emit.ILGenerator,System.Type)">
            <summary>
            判断是否需要装箱
            </summary>
            <param name="generator"></param>
            <param name="type"></param>
        </member>
        <member name="M:Arch.Data.Orm.FastInvoker.OpCodesFactory.UnboxIfNeeded(System.Reflection.Emit.ILGenerator,System.Type)">
            <summary>
            判断是否需要拆箱
            </summary>
            <param name="generator"></param>
            <param name="type"></param>
        </member>
        <member name="T:Arch.Data.DbEngine.DatabaseManager">
            <summary>
            数据库管理器
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.DatabaseManager.m_Random">
            <summary>
            随机发生器,用来动态选择slave数据库
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.DatabaseManager.m_DatabaseSets">
            <summary>
            数据库缓存
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.DatabaseManager.m_DatabaseProviders">
            <summary>
            数据库提供者缓存
            </summary>
        </member>
        <member name="M:Arch.Data.DbEngine.DatabaseManager.#cctor">
            <summary>
            静态构造
            </summary>
        </member>
        <member name="T:Arch.Data.DbEngine.DatabaseManager.DatabaseSetWrapper">
            <summary>
            数据库集包装器
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.DatabaseManager.DatabaseSetWrapper.m_TotalRatios">
            <summary>
            从数据库分片权重
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.DatabaseManager.DatabaseSetWrapper.m_Databases">
            <summary>
            数据库列表
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.DatabaseManager.DatabaseSetWrapper.AllShards">
            <summary>
            分片列表
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.DatabaseManager.DatabaseSetWrapper.Name">
            <summary>
            数据集名称
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.DatabaseManager.DatabaseSetWrapper.ProviderType">
            <summary>
            数据集提供者类型
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.DatabaseManager.DatabaseSetWrapper.EnableReadWriteSpliding">
            <summary>
            是否支持读写分离
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.DatabaseManager.DatabaseSetWrapper.TotalRatios">
            <summary>
            从数据库分片权重
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.DatabaseManager.DatabaseSetWrapper.Databases">
            <summary>
            数据库列表
            </summary>
        </member>
        <member name="T:Arch.Data.DbEngine.DatabaseManager.DatabaseWrapper">
            <summary>
            数据库包装器
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.DatabaseManager.DatabaseWrapper.Name">
            <summary>
            物理数据库名称
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.DatabaseManager.DatabaseWrapper.DatabaseType">
            <summary>
            数据库主从类型
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.DatabaseManager.DatabaseWrapper.Sharding">
            <summary>
            分片标识
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.DatabaseManager.DatabaseWrapper.Ratio">
            <summary>
            读权重
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.DatabaseManager.DatabaseWrapper.RatioStart">
            <summary>
            读权重起始值
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.DatabaseManager.DatabaseWrapper.RatioEnd">
            <summary>
            读权重结束值
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.DatabaseManager.DatabaseWrapper.Database">
            <summary>
            数据库
            </summary>
        </member>
        <member name="T:Arch.Data.Common.Metrics.MetricsLogger">
            <summary>
            日志对象
            </summary>
        </member>
        <member name="F:Arch.Data.Common.Metrics.MetricsLogger.CENTRALMETRICS">
            <summary>
            centrallogging标识
            </summary>
        </member>
        <member name="F:Arch.Data.Common.Metrics.MetricsLogger.COUNT">
            <summary>
            SQL记次统计
            </summary>
        </member>
        <member name="F:Arch.Data.Common.Metrics.MetricsLogger.COST">
            <summary>
            SQL时长统计
            </summary>
        </member>
        <member name="F:Arch.Data.Common.Metrics.MetricsLogger.DAO">
            <summary>
            SQL 调用者统计tag
            </summary>
        </member>
        <member name="F:Arch.Data.Common.Metrics.MetricsLogger.METHOD">
            <summary>
            SQL 调用方法统计tag
            </summary>
        </member>
        <member name="F:Arch.Data.Common.Metrics.MetricsLogger.SIZE">
            <summary>
            SQL正文长度统计tag
            </summary>
        </member>
        <member name="F:Arch.Data.Common.Metrics.MetricsLogger.STATUS">
            <summary>
            SQL执行是否成功统计tag
            </summary>
        </member>
        <member name="F:Arch.Data.Common.Metrics.MetricsLogger.MetricsPeriod">
            <summary>
            统计间隔
            </summary>
        </member>
        <member name="F:Arch.Data.Common.Metrics.MetricsLogger.LastLogTime">
            <summary>
            上次统计时间
            </summary>
        </member>
        <member name="F:Arch.Data.Common.Metrics.MetricsLogger.m_LogName">
            <summary>
            统计名称，用于类型配置，目前支持centrallogging统计接口
            : "centrallogging"
            </summary>
        </member>
        <member name="F:Arch.Data.Common.Metrics.MetricsLogger.handler">
            <summary>
            统计接口实例
            </summary>
        </member>
        <member name="M:Arch.Data.Common.Metrics.MetricsLogger.#cctor">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:Arch.Data.Common.Metrics.MetricsLogger.WriteLog(Arch.Data.DbEngine.Statement)">
            <summary>
            统计SQL Statement执行情况
            </summary>
        </member>
        <member name="T:Arch.Data.DbEngine.DatabaseType">
            <summary>
            物理数据库类型
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.DatabaseType.Master">
            <summary>
            主数据库，可读可写
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.DatabaseType.Slave">
            <summary>
            从数据库，可读
            </summary>
        </member>
        <member name="T:Arch.Data.BaseDaoFactory">
            <summary>
            创建basedao工厂
            </summary>
        </member>
        <member name="M:Arch.Data.BaseDaoFactory.CreateBaseDao(System.String)">
            <summary>
            创建basedao工厂
            </summary>
            <param name="logicDBName">数据库逻辑名称</param>
            <returns>BaseDao</returns>
        </member>
        <member name="T:Arch.Data.Orm.Dialect.DbDialect">
            <summary>
            
            </summary>
        </member>
        <member name="T:Arch.Data.Orm.Dialect.IDbDialect">
            <summary>
            数据库方言接口
            </summary>
        </member>
        <member name="M:Arch.Data.Orm.Dialect.IDbDialect.QuoteParameter(System.String)">
            <summary>
            拼接参数
            </summary>
        </member>
        <member name="M:Arch.Data.Orm.Dialect.IDbDialect.QuoteOpenOpName(System.String)">
            <summary>
            拼接操作头部
            </summary>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.Dialect.IDbDialect.QuoteCloseOpName">
            <summary>
            拼接操作尾部
            </summary>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.Dialect.IDbDialect.WithLock(System.String)">
            <summary>
            加nolock
            </summary>
            <returns></returns>
        </member>
        <member name="P:Arch.Data.Orm.Dialect.IDbDialect.CloseQuote">
            <summary>
            结束引号
            </summary>
        </member>
        <member name="P:Arch.Data.Orm.Dialect.IDbDialect.OpenQuote">
            <summary>
            结束
            </summary>
        </member>
        <member name="P:Arch.Data.Orm.Dialect.IDbDialect.IdentitySelectString">
            <summary>
            标识返回自增长id
            </summary>
        </member>
        <member name="M:Arch.Data.Orm.Dialect.DbDialect.QuoteParameter(System.String)">
            <summary>
            拼接参数
            </summary>
        </member>
        <member name="M:Arch.Data.Orm.Dialect.DbDialect.Quote(System.String)">
            <summary>
            拼接名称
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.Dialect.DbDialect.QuoteOpenOpName(System.String)">
            <summary>
            拼接update头部
            </summary>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.Dialect.DbDialect.QuoteCloseOpName">
            <summary>
            拼接update尾部
            </summary>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.Dialect.DbDialect.WithLock(System.String)">
            <summary>
            加锁类型值
            </summary>
            <returns></returns>
        </member>
        <member name="P:Arch.Data.Orm.Dialect.DbDialect.CloseQuote">
            <summary>
            结束引号
            </summary>
        </member>
        <member name="P:Arch.Data.Orm.Dialect.DbDialect.OpenQuote">
            <summary>
            开始引号
            </summary>
        </member>
        <member name="P:Arch.Data.Orm.Dialect.DbDialect.IdentitySelectString">
            <summary>
            标识返回自增长id
            </summary>
        </member>
        <member name="T:Arch.Data.Orm.Dialect.DbDialectFactory">
            <summary>
            方言工厂
            </summary>
        </member>
        <member name="M:Arch.Data.Orm.Dialect.DbDialectFactory.Build(System.String)">
            <summary>
            构建方言
            </summary>
            <param name="dbTypeName">数据库类型</param>
            <returns></returns>
        </member>
        <member name="T:Arch.Data.Common.Logging.EnumHelper">
            <summary>
            枚举帮助类
            </summary>
        </member>
        <member name="M:Arch.Data.Common.Logging.EnumHelper.GetEnumItemDescription``1(System.Int32)">
            <summary>
            由枚举值获取说明
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="itemValue">枚举值</param>
            <returns>说明</returns>
        </member>
        <member name="M:Arch.Data.Common.Logging.EnumHelper.GetEnumItems(System.Type)">
            <summary>
            获取枚举条目信息列表
            </summary>
            <param name="enumType">枚举类型</param>
            <returns>条目列表</returns>
        </member>
        <member name="M:Arch.Data.Common.Logging.EnumHelper.ParseByDescription``1(System.String,System.Boolean)">
            <summary>
            由说明来解析枚举
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="description">说明</param>
            <param name="ignoreCase">是否忽略大小写</param>
            <returns>枚举</returns>
        </member>
        <member name="M:Arch.Data.Common.Logging.EnumHelper.ParseByNameOrValue``1(System.String)">
            <summary>
            从名称或枚举值的字符串表示解析枚举值
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="nameOrValue">名称或值字符串表示</param>
            <returns>枚举</returns>
        </member>
        <member name="M:Arch.Data.Common.Logging.EnumHelper.ParseByNameOrValue``1(System.String,System.Boolean)">
            <summary>
            从名称或枚举值的字符串表示解析枚举值
            </summary>
            <typeparam name="TEnum">枚举类型</typeparam>
            <param name="nameOrValue">名称或值字符串表示</param>
            <param name="ignoreCase">是否忽略大小写</param>
            <returns>枚举</returns>
        </member>
        <member name="T:Arch.Data.Common.Logging.Configuration.LoggingSection">
            <summary>
            日志配置节
            </summary> 
        </member>
        <member name="F:Arch.Data.Common.Logging.Configuration.LoggingSection.c_NameProperty">
            <summary>
            名称
            </summary>
        </member>
        <member name="F:Arch.Data.Common.Logging.Configuration.LoggingSection.SectionName">
            <summary>
            Db引擎配置节名称
            </summary>
        </member>
        <member name="F:Arch.Data.Common.Logging.Configuration.LoggingSection.m_Listensers">
            <summary>
            日志侦听器
            </summary>
        </member>
        <member name="M:Arch.Data.Common.Logging.Configuration.LoggingSection.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:Arch.Data.Common.Logging.Configuration.LoggingSection.GetConfig">
            <summary>
            获取日志配置节
            </summary>
            <returns></returns>
        </member>
        <member name="P:Arch.Data.Common.Logging.Configuration.LoggingSection.Name">
            <summary>
            名称,关键字
            </summary>
        </member>
        <member name="P:Arch.Data.Common.Logging.Configuration.LoggingSection.Listensers">
            <summary>
            日志侦听器
            </summary>
        </member>
        <member name="T:Arch.Data.DbEngine.Configuration.DatabaseSetElementCollection">
            <summary>
            数据库集配置集合
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.Configuration.DatabaseSetElementCollection.s_Properties">
            <summary>
            属性集合
            </summary>
        </member>
        <member name="M:Arch.Data.DbEngine.Configuration.DatabaseSetElementCollection.#cctor">
            <summary>
            静态构造
            </summary>
        </member>
        <member name="M:Arch.Data.Common.Util.CommonUtil.GetHashCode4SQLString(System.String)">
            <summary>
             获得string对象的Hash值，每次耗时~5 微秒
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Common.Util.CommonUtil.GetTaggedSQLText(System.String)">
            <summary>
            SQL打Tag
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="F:Arch.Data.Common.Util.CommonUtil.key">
            
            <summary> 
            对称加密解密的密钥 
            </summary> 
        </member>
        <member name="M:Arch.Data.Common.Util.CommonUtil.DesEncrypt(System.String)">
            
            <summary> 
            DES加密 
            </summary> 
            <param name="encryptString"></param> 
            <returns></returns> 
        </member>
        <member name="M:Arch.Data.Common.Util.CommonUtil.DesDecrypt(System.String)">
            
            <summary> 
            DES解密 
            </summary> 
            <param name="decryptString"></param> 
            <returns></returns> 
        </member>
        <member name="T:Arch.Data.Orm.FastInvoker.ReflectorHelper">
            <summary>
            反射帮助类
            </summary>
        </member>
        <member name="M:Arch.Data.Orm.FastInvoker.ReflectorHelper.GetField``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Gets the field represented by the lambda expression.
            </summary>
            <exception cref="T:System.ArgumentNullException">The <paramref name="method"/> is null.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="method"/> is not a lambda expression or it does not represent a field access.</exception>
        </member>
        <member name="T:Arch.Data.Orm.Dialect.SqlServer2008Dialect">
            <summary>
            sqlserver2008方言
            </summary>
        </member>
        <member name="M:Arch.Data.Orm.Dialect.SqlServer2008Dialect.QuoteParameter(System.String)">
            <summary>
            拼接参数
            </summary>
        </member>
        <member name="M:Arch.Data.Orm.Dialect.SqlServer2008Dialect.QuoteOpenOpName(System.String)">
            <summary>
            拼接操作头部
            </summary>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.Dialect.SqlServer2008Dialect.QuoteCloseOpName">
            <summary>
            拼接操作尾部
            </summary>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.Dialect.SqlServer2008Dialect.WithLock(System.String)">
            <summary>
            加锁类型值
            </summary>
            <param name="paramName"></param>
            <returns></returns>
        </member>
        <member name="T:Arch.Data.DbEngine.Statement">
            <summary>
            指令
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.Statement.SUCCESS">
            <summary>
            SQL执行成功
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.Statement.FAIL">
            <summary>
            SQL执行失败
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.Statement.m_Parameters">
            <summary>
            参数集合
            </summary>
        </member>
        <member name="M:Arch.Data.DbEngine.Statement.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:Arch.Data.DbEngine.Statement.Validate">
            <summary>
            验证指令
            </summary>
        </member>
        <member name="M:Arch.Data.DbEngine.Statement.ExecuteDataReader">
            <summary>
            执行返回向前只读数据集指令
            </summary>
            <returns>向前只读数据集</returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Statement.ExecuteScalar">
            <summary>
            执行返回简单数据结果指令
            </summary>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Statement.ExecuteDataSet(System.String[])">
            <summary>
            执行返回数据集指令
            </summary>
            <returns>数据集</returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Statement.ExecuteNonQuery">
            <summary>
            执行无返回值指令
            </summary>
            <returns>返回值</returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Statement.ExecuteShardDataReader">
            <summary>
            执行返回向前只读数据集指令
            </summary>
            <returns>向前只读数据集</returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Statement.ExecuteShardTable">
            <summary>
            使用datareader查询并返回所有查询数据合并为datatable
            </summary>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Statement.ExecuteShardDataSet(System.String[])">
            <summary>
            执行返回数据集指令携带shardobj
            </summary>
            <returns>数据集</returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Statement.ExecuteShardScalar">
            <summary>
            执行返回简单数据结果指令携带shardobj
            </summary>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Statement.MergingExecuteDataSetToDataTable(System.String[])">
            <summary>
            使用dataset查询并返回所有查询数据合并为datatable
            </summary>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Statement.ExecuteShardNonQuery">
            <summary>
            执行影响行数查询
            </summary>
            <returns>影响行数结果</returns>
        </member>
        <member name="P:Arch.Data.DbEngine.Statement.StatementText">
            <summary>
            指令内容
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.Statement.ShardColValue">
            <summary>
            分片字段和值
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.Statement.SQLHash">
            <summary>
            指令内容的Hash值（MD5 - base64)
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.Statement.SQLCacheKey">
            <summary>
            指令内容的缓存key
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.Statement.Duration">
            <summary>
            持续时间
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.Statement.ExecStatus">
            <summary>
            执行是否成功
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.Statement.Invoker">
            <summary>
            调用者信息 - 类名
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.Statement.InvokeMethod">
            <summary>
            调用者信息 - 方法签名
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.Statement.StatementType">
            <summary>
            指令类型
            Sql-Sql语句
            StoreProcedure-存贮过程
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.Statement.DatabaseSet">
            <summary>
            逻辑数据库
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.Statement.Sharding">
            <summary>
            分区标识
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.Statement.IsNeedShard">
            <summary>
            是否需要分片
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.Statement.Shardobj">
            <summary>
            
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.Statement.OperationType">
            <summary>
            指令操作类型
            Default-未指定,默认在master库执行
            Read-读操作,在slave库执行
            Write-写操作,在master库执行
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.Statement.Timeout">
            <summary>
            指令超时时长
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.Statement.IsSensitive">
            <summary>
            是否包含敏感信息
            如果包含敏感信息则忽略日志
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.Statement.ExtendParameters">
            <summary>
            扩展属性
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.Statement.Parameters">
            <summary>
            指令参数集
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.Shard.ShardObject.ShardColumns">
            <summary>
            the shard parameters passed from caller
            </summary>
        </member>
        <member name="M:Arch.Data.DbEngine.Shard.DataSetHelper.JoinTable(System.Data.DataTable,System.Data.DataTable)">
            <summary>
            合并结构相同的表
            </summary>
            <param name="sDTone">源表1</param>
            <param name="sDTtwo">源表2</param>
            <returns>返回表</returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Shard.DataSetHelper.SelectDistinct(System.String,System.Data.DataTable,System.String)">
            <summary> 
            按照fieldName从sourceTable中选择出不重复的行， 
            相当于select distinct fieldName from sourceTable 
            </summary> 
            <param name="tableName">表名</param> 
            <param name="sourceTable">源DataTable</param> 
            <param name="fieldName">列名</param> 
            <returns>一个新的不含重复行的DataTable，列只包括fieldName指明的列</returns> 
        </member>
        <member name="M:Arch.Data.DbEngine.Shard.DataSetHelper.SelectDistinct(System.String,System.Data.DataTable,System.String[])">
            <summary> 
            按照fieldName从sourceTable中选择出不重复的行， 
            相当于select distinct fieldName1,fieldName2,,fieldNamen from sourceTable 
            </summary> 
            <param name="tableName">表名</param> 
            <param name="sourceTable">源DataTable</param> 
            <param name="fieldNames">列名数组</param> 
            <returns>一个新的不含重复行的DataTable，列只包括fieldNames中指明的列</returns> 
        </member>
        <member name="M:Arch.Data.DbEngine.Shard.DataSetHelper.Distinct(System.String,System.Data.DataTable,System.String)">
            <summary> 
            按照fieldName从sourceTable中选择出不重复的行， 
            并且包含sourceTable中所有的列。 
            </summary> 
            <param name="tableName">表名</param> 
            <param name="sourceTable">源表</param> 
            <param name="fieldName">字段</param> 
            <returns>一个新的不含重复行的DataTable</returns> 
        </member>
        <member name="M:Arch.Data.DbEngine.Shard.DataSetHelper.Distinct(System.String,System.Data.DataTable,System.String[])">
            <summary> 
            按照fieldNames从sourceTable中选择出不重复的行， 
            并且包含sourceTable中所有的列。 
            </summary> 
            <param name="tableName">表名</param> 
            <param name="sourceTable">源表</param> 
            <param name="fieldNames">字段</param> 
            <returns>一个新的不含重复行的DataTable</returns> 
        </member>
        <member name="M:Arch.Data.DbEngine.Shard.DataSetHelper.SelectInto(System.String,System.Data.DataTable,System.String,System.String,System.String)">
            <summary> 
            按sort排序，按rowFilter过滤sourceTable， 
            复制fieldList中指明的字段的数据到新DataTable，并返回之 
            </summary> 
            <param name="tableName">表名</param> 
            <param name="sourceTable">源表</param> 
            <param name="fieldList">字段列表</param> 
            <param name="rowFilter">过滤条件</param> 
            <param name="sort">排序</param> 
            <returns>新DataTable</returns> 
        </member>
        <member name="T:Arch.Data.Common.Logging.Listeners.CentralLoggingListener">
            <summary>
            central logging 侦听器 
            </summary>
        </member>
        <member name="T:Arch.Data.Common.Logging.Listener">
            <summary>
            日志侦听器基类
            </summary>
        </member>
        <member name="T:Arch.Data.Common.Logging.IListener">
            <summary>
            日志侦听器接口
            </summary>
        </member>
        <member name="M:Arch.Data.Common.Logging.IListener.Log(Arch.Data.Common.Logging.LogEntry)">
            <summary>
            日志侦听器接口
            </summary>
            <param name="logEntry">日志项</param>
        </member>
        <member name="M:Arch.Data.Common.Logging.IListener.Init(System.String,Arch.Data.Common.Logging.LogLevel,System.String)">
            <summary>
            初始化
            </summary>
            <param name="name">名称</param>
            <param name="level">日志级别</param>
            <param name="setting">配置</param>
        </member>
        <member name="P:Arch.Data.Common.Logging.IListener.Name">
            <summary>
            日志侦听器名称
            </summary>
        </member>
        <member name="P:Arch.Data.Common.Logging.IListener.Level">
            <summary>
            日志日志级别过滤器
            只有日志级别大于设定值的日志才会记录
            </summary>
        </member>
        <member name="M:Arch.Data.Common.Logging.Listener.Log(Arch.Data.Common.Logging.LogEntry)">
            <summary>
            日志侦听器接口
            </summary>
            <param name="logEntry">日志项</param>
        </member>
        <member name="M:Arch.Data.Common.Logging.Listener.Dispose">
            <summary>
            显示释放
            </summary>
        </member>
        <member name="M:Arch.Data.Common.Logging.Listener.WriteLog(Arch.Data.Common.Logging.LogEntry)">
            <summary>
            真正的写日志方法
            </summary>
            <param name="logEntry">日志项</param>
        </member>
        <member name="M:Arch.Data.Common.Logging.Listener.Finalize">
            <summary>
            析构器
            </summary>
        </member>
        <member name="M:Arch.Data.Common.Logging.Listener.Dispose(System.Boolean)">
            <summary>
            真正的资源释放程序
            </summary>
            <param name="isDisposing">是否正在释放</param>
        </member>
        <member name="M:Arch.Data.Common.Logging.Listener.Init(System.String,Arch.Data.Common.Logging.LogLevel,System.String)">
            <summary>
            初始化
            </summary>
            <param name="name">名称</param>
            <param name="level">级别</param>
        </member>
        <member name="P:Arch.Data.Common.Logging.Listener.Level">
            <summary>
            日志级别过滤器
            </summary>
        </member>
        <member name="P:Arch.Data.Common.Logging.Listener.Name">
            <summary>
            侦听器名称
            </summary>
        </member>
        <member name="T:Arch.Data.Common.constant.DALConstant">
            <summary>
            DAL constant definition
            </summary>
        </member>
        <member name="T:Arch.Data.Common.constant.DALExtStatementConstant">
            <summary>
            DAL Extended Statement constant definition
            </summary>
        </member>
        <member name="F:Arch.Data.Common.constant.DALExtStatementConstant.TIMEOUT">
            <summary>
            the timeout of SQL command
            </summary>
        </member>
        <member name="F:Arch.Data.Common.constant.DALExtStatementConstant.GROUPBY">
            <summary>
            shard statement
            specify the column for group by
            </summary>
        </member>
        <member name="F:Arch.Data.Common.constant.DALExtStatementConstant.SUM">
            <summary>
            shard statement
            specify the column for SUM
            </summary>
        </member>
        <member name="F:Arch.Data.Common.constant.DALExtStatementConstant.AVG">
            <summary>
            shard statement
            specify the column for AVG
            </summary>
        </member>
        <member name="F:Arch.Data.Common.constant.DALExtStatementConstant.MIN">
            <summary>
            shard statement
            specify the column for MIN
            </summary>
        </member>
        <member name="F:Arch.Data.Common.constant.DALExtStatementConstant.MAX">
            <summary>
            shard statement
            specify the column for MAX
            </summary>
        </member>
        <member name="F:Arch.Data.Common.constant.DALExtStatementConstant.COUNT">
            <summary>
            shard statement
            specify the column for COUNT
            </summary>
        </member>
        <member name="F:Arch.Data.Common.constant.DALExtStatementConstant.TOP">
            <summary>
            shard statement
            specify the column for TOP
            </summary>
        </member>
        <member name="F:Arch.Data.Common.constant.DALExtStatementConstant.SHARDCOL">
            <summary>
            shard statement
            specify the shard column key
            </summary>
        </member>
        <member name="F:Arch.Data.Common.constant.DALExtStatementConstant.LOCK">
            <summary>
            specify the LOCK TYPE
            </summary>
        </member>
        <member name="F:Arch.Data.Common.constant.DALExtStatementConstant.SENSITIVE">
            <summary>
            mark the SQL statement as sensitive
            </summary>
        </member>
        <member name="M:Arch.Data.Orm.FastInvoker.DynamicMethodFactory.CreateDynamicConstructorInfoHandler(System.Type,System.Reflection.ConstructorInfo)">
            <summary>
            创建构造函数
            </summary>
            <param name="type"></param>
            <param name="constructorInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.FastInvoker.DynamicMethodFactory.CreateGetHandler(System.Type,System.Reflection.PropertyInfo)">
            <summary>
            创建PropertyInfo的动态方法get
            </summary>
            <param name="type"></param>
            <param name="propertyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.FastInvoker.DynamicMethodFactory.CreateSetHandler(System.Type,System.Reflection.PropertyInfo)">
            <summary>
            创建PropertyInfo的动态方法Set
            </summary>
            <param name="type"></param>
            <param name="propertyInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.FastInvoker.DynamicMethodFactory.CreateGetHandler(System.Type,System.Reflection.FieldInfo)">
            <summary>
            创建Field的动态方法get
            </summary>
            <param name="type"></param>
            <param name="fieldInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.FastInvoker.DynamicMethodFactory.CreateSetHandler(System.Type,System.Reflection.FieldInfo)">
            <summary>
            创建Field的动态方法set
            </summary>
            <param name="type"></param>
            <param name="fieldInfo"></param>
            <returns></returns>
        </member>
        <member name="T:Arch.Data.DbEngine.Providers.SqlDatabaseProvider">
            <summary>
            Sql Server 数据库提供者实现
            </summary>
        </member>
        <member name="T:Arch.Data.DbEngine.IDatabaseProvider">
            <summary>
            数据库提供者接口
            </summary>
        </member>
        <member name="M:Arch.Data.DbEngine.IDatabaseProvider.CreateConnection">
            <summary>
            创建数据库链接
            </summary>
            <returns>数据库链接</returns>
        </member>
        <member name="M:Arch.Data.DbEngine.IDatabaseProvider.CreateCommand">
            <summary>
            创建数据库指令
            </summary>
            <returns>数据库指令</returns>
        </member>
        <member name="M:Arch.Data.DbEngine.IDatabaseProvider.CreateDataAdapter">
            <summary>
            创建数据库适配器
            </summary>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.DbEngine.IDatabaseProvider.CreateParameterName(System.String)">
            <summary>
            将名称变为数据库相关的参数名称
            </summary>
            <param name="name">参数名称</param>
            <returns>数据库相关的参数名称</returns>
        </member>
        <member name="M:Arch.Data.DbEngine.IDatabaseProvider.DeriveParameters(System.Data.Common.DbCommand)">
            <summary>
            导出数据库指令参数
            </summary>
            <param name="command">数据库指令</param>
        </member>
        <member name="P:Arch.Data.DbEngine.IDatabaseProvider.ProviderType">
            <summary>
            数据库提供者类型
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.IDatabaseProvider.DeriveParametersSupported">
            <summary>
            是否支持参数导出
            </summary>
        </member>
        <member name="M:Arch.Data.DbEngine.Providers.SqlDatabaseProvider.CreateConnection">
            <summary>
            创建数据库链接
            </summary>
            <returns>数据库链接</returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Providers.SqlDatabaseProvider.CreateCommand">
            <summary>
            创建数据库指令
            </summary>
            <returns>数据库指令</returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Providers.SqlDatabaseProvider.CreateParameterName(System.String)">
            <summary>
            创建数据库参数合法名称
            </summary>
            <param name="name">数据库参数名称</param>
            <returns>据库参数合法名称</returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Providers.SqlDatabaseProvider.CreateDataAdapter">
            <summary>
            创建数据库适配器
            </summary>
            <returns>数据库适配器</returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Providers.SqlDatabaseProvider.DeriveParameters(System.Data.Common.DbCommand)">
            <summary>
            导出数据库指令参数
            </summary>
            <param name="command">数据库指令</param>
        </member>
        <member name="P:Arch.Data.DbEngine.Providers.SqlDatabaseProvider.DeriveParametersSupported">
            <summary>
            是否支持导出数据库指令参数
            </summary>
        </member>
        <member name="T:Arch.Data.DbEngine.Configuration.DatabaseProviderElementCollection">
            <summary>
            数据库提供者集合
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.Configuration.DatabaseProviderElementCollection.s_Properties">
            <summary>
            属性集合
            </summary>
        </member>
        <member name="M:Arch.Data.DbEngine.Configuration.DatabaseProviderElementCollection.#cctor">
            <summary>
            静态构造方法
            </summary>
        </member>
        <member name="F:Arch.Data.Common.Metrics.Configuration.MetricsElement.c_NameProperty">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Arch.Data.Common.Metrics.Configuration.MetricsElement.Name">
            <summary>
            名称,关键字
            </summary>
        </member>
        <member name="T:Arch.Data.Orm.sql.LRUCache`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Arch.Data.Orm.IConstraint">
            <summary>
            约束接口
            </summary>
        </member>
        <member name="P:Arch.Data.Orm.IConstraint.Column">
            <summary>
            别名
            </summary>
        </member>
        <member name="P:Arch.Data.Orm.IConstraint.Operator">
            <summary>
            操作，例如：=
            </summary>
        </member>
        <member name="P:Arch.Data.Orm.IConstraint.Value">
            <summary>
            
            </summary>
        </member>
        <member name="P:Arch.Data.Orm.IConstraint.HasQuery">
            <summary>
            
            </summary>
        </member>
        <member name="P:Arch.Data.Orm.IConstraint.Query">
            <summary>
            
            </summary>
        </member>
        <member name="T:Arch.Data.Common.Logging.LoggingException">
            <summary>
            异常处理异常
            </summary>
        </member>
        <member name="M:Arch.Data.Common.Logging.LoggingException.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:Arch.Data.Common.Logging.LoggingException.#ctor(System.String)">
            <summary>
            构造方法
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Arch.Data.Common.Logging.LoggingException.#ctor(System.String,System.Exception)">
            <summary>
            构造方法
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Arch.Data.Common.Logging.LoggingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            构造方法
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:Arch.Data.Common.Logging.Logger">
            <summary>
            日志对象
            </summary>
        </member>
        <member name="M:Arch.Data.Common.Logging.Logger.WriteLog(Arch.Data.Common.Logging.LogEntry,System.Exception)">
            <summary>
            记日志
            </summary>
            <param name="logEntry">日志记录</param>
            <param name="ex">异常</param>
        </member>
        <member name="M:Arch.Data.Common.Logging.Logger.WriteLog(Arch.Data.Common.Logging.LogEntry)">
            <summary>
            记日志
            </summary>
            <param name="logEntry">日志</param>
        </member>
        <member name="P:Arch.Data.Common.Logging.Logger.Policy">
            <summary>
            global control how to make log
            </summary>
        </member>
        <member name="T:Arch.Data.DbEngine.StatementParameterCollection">
            <summary>
            指令参数
            </summary>
        </member>
        <member name="M:Arch.Data.DbEngine.StatementParameterCollection.AddInParameter(System.String,System.Data.DbType,System.Boolean)">
            <summary>
            following add parameter functions is to be consistent to db.addinparameter functions
            Regular expression replace
            db.AddInParameter\(dbCommand,{.*}   => dic.AddInParameter(\1
            </summary>
            <param name="name"></param>
            <param name="dbType"></param>
        </member>
        <member name="T:Arch.Data.BaseDao">
            <summary>
            dal fx入口
            </summary>
        </member>
        <member name="M:Arch.Data.BaseDao.#ctor(System.String)">
            <summary>
            构造初始化
            </summary>
            <param name="logicDbName">数据库逻辑名</param>
        </member>
        <member name="M:Arch.Data.BaseDao.GetQuery">
            <summary>
            获得查询对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.BaseDao.GetQuery``1">
            <summary>
            获得查询对象
            </summary>
            <typeparam name="T">查询实体类</typeparam>
            <returns>查询对象</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.Insert``1(``0)">
            <summary>
            插入对象
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="obj">实体对象</param>
            <returns>返回第一列值（譬如自增长ID）</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.Insert``1(``0,System.Collections.IDictionary)">
            <summary>
            插入对象
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="obj">实体对象</param>
            <param name="extendParams">指令扩展属性（分片：shardcol,超时:timeout）</param>
            <returns>返回第一列值（譬如自增长ID）</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.Insert``1(System.String,``0,System.Collections.IDictionary)">
            <summary>
            插入对象
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="logicDbName">逻辑名称</param>
            <param name="obj">实体对象</param>
            <param name="extendParams">指令扩展属性（分片：shardcol,超时:timeout） </param>
            <returns>返回第一列值（譬如自增长ID）</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.BulkInsert``1(System.Collections.Generic.IList{``0})">
            <summary>
            批量插入对象,batchSize：100
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="list">对象集合</param>
            <returns>是否成功</returns>
            <exception cref="T:Arch.Data.DalException">数据访问异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.BulkInsert``1(System.Collections.Generic.IList{``0},System.Collections.IDictionary)">
            <summary>
            批量插入对象,batchSize：100
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="list">对象集合</param>
            <param name="extendParams">扩展属性，譬如:timeout等</param>
            <returns>是否成功</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.BulkInsert``1(System.String,System.Collections.Generic.IList{``0},System.Collections.IDictionary)">
            <summary>
            批量插入对象,batchSize：100
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="logicDbName">逻辑名称</param>
            <param name="list">对象集合</param>
            <param name="extendParams">扩展属性，譬如:timeout等 </param>
            <returns>是否成功</returns>
            <remarks>1.集合对象不能超过100, 2.参数不能超过21个也就是对象属性不能超过21列</remarks>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.Update``1(``0)">
            <summary>
            更新记录
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="obj">实体对象</param>
            <returns>影响行数</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.Update``1(``0,System.Collections.IDictionary)">
            <summary>
            更新记录
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="obj">实体对象</param>
            <param name="extendParams">指令扩展属性（分片：shardcol,超时:timeout）</param>
            <returns>影响行数</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.Update``1(System.String,``0,System.Collections.IDictionary)">
            <summary>
            更新记录
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="logicDbName">逻辑数据名称</param>
            <param name="obj">对象</param>
            <param name="extendParams">指令扩展属性（分片：shardcol,超时:timeout）</param>
            <returns>影响行数</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.Delete``1(``0)">
            <summary>
            删除记录
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="obj">对象</param>
            <returns>影响行数</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.Delete``1(``0,System.Collections.IDictionary)">
            <summary>
            删除记录
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="obj">对象</param>
            <param name="extendParams">指令扩展属性（分片：shardcol,超时:timeout</param>
            <returns>影响行数</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.Delete``1(System.String,``0,System.Collections.IDictionary)">
            <summary>
            删除记录
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="logicDbName">逻辑数据名称</param>
            <param name="obj">对象</param>
            <param name="extendParams">指令扩展属性（分片：shardcol,超时:timeout）</param>
            <returns>影响行数</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.GetByKey``1(System.Object)">
            <summary>
            根据主键获得一个对象,输入值类型一定要和实体类生成的主键类型一致，不支持联合组键
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="key">单一主键</param>
            <returns>对象</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.GetByKey``1(System.Object,System.Collections.IDictionary)">
            <summary>
             根据主键获得一个对象,输入值类型一定要和实体类生成的主键类型一致，不支持联合组键
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="key">单一主键</param>
            <param name="extendParams">指令参数：如timeout</param>
            <returns>对象</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.GetByKey``1(System.Object,System.Collections.IDictionary,Arch.Data.DbEngine.OperationType)">
            <summary>
             根据主键获得一个对象,输入值类型一定要和实体类生成的主键类型一致，不支持联合组键
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="key">单一主键</param>
            <param name="extendParams">指令参数：如timeout</param>
            <param name="operationType">操作类型，读写分离，默认从slave库读取</param>
            <returns>对象</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.GetByKey``1(System.String,System.Object,System.Collections.IDictionary,Arch.Data.DbEngine.OperationType)">
            <summary>
             根据主键获得一个对象,输入值类型一定要和实体类生成的主键类型一致，不支持联合组键
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="logicDbName">逻辑数据库名称</param>
            <param name="key">单一主键</param>
            <param name="extendParams">指令参数：如timeout</param>
            <param name="operationType">操作类型，读写分离，默认从slave库读取</param>
            <returns>对象</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.GetAll``1">
            <summary>
            获取所有记录
            </summary>
            <typeparam name="T">实体类</typeparam>
            <returns>所有对象</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.GetAll``1(Arch.Data.DbEngine.OperationType)">
            <summary>
            获取所有记录
            </summary>
            <typeparam name="T">实体类</typeparam>
            <param name="operationType">操作类型，读写分离，默认从slave库读取</param>
            <returns>所有对象</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.GetAll``1(System.Collections.IDictionary,Arch.Data.DbEngine.OperationType)">
            <summary>
            获取所有记录
            </summary>
            <typeparam name="T">实体类</typeparam>
            <param name="extendParams">指令参数：如timeout</param>
            <param name="operationType">操作类型，读写分离，默认从slave库读取</param>
            <returns>所有对象</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.GetAll``1(System.String,System.Collections.IDictionary,Arch.Data.DbEngine.OperationType)">
            <summary>
            获取所有记录
            </summary>
            <typeparam name="T">实体类</typeparam>
            <param name="logicDbName">逻辑数据库名称</param>
            <param name="extendParams">指令参数：如timeout</param>
            <param name="operationType">操作类型，读写分离，默认从slave库读取</param>
            <returns>所有对象</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.SelectList``1(System.String)">
            <summary>
            执行查询语句
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="sql">sql语句</param>
            <returns>结果集合</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.SelectList``1(System.String,Arch.Data.DbEngine.StatementParameterCollection)">
            <summary>
            执行查询语句
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="sql">sql语句</param>
            <param name="parameters">查询参数</param>
            <returns>结果集合</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.SelectList``1(System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IDictionary)">
            <summary>
            执行查询语句
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="sql">sql语句</param>
            <param name="parameters">查询参数</param>
            <param name="extendParams">指令参数：如timeout</param>
            <returns>结果集合</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.SelectList``1(System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IDictionary,Arch.Data.DbEngine.OperationType)">
            <summary>
            执行查询语句
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="sql">sql语句</param>
            <param name="parameters">查询参数</param>
            <param name="extendParams">指令参数：如timeout</param>
            <param name="operationType">操作类型，读写分离，默认从slave库读取</param>
            <returns>结果集合</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.SelectList``1(System.String,System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IDictionary,Arch.Data.DbEngine.OperationType)">
            <summary>
            执行查询语句
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="logicDbName">逻辑数据名称</param>
            <param name="sql">sql语句</param>
            <param name="parameters">查询参数</param>
            <param name="extendParams">指令参数：如timeout</param>
            <param name="operationType">操作类型，读写分离，默认从slave库读取</param>
            <returns>结果集合</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.SelectFirst``1(System.String)">
            <summary>
            获取第一行对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="sql">sql语句</param>
            <returns>对象</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.SelectFirst``1(System.String,Arch.Data.DbEngine.StatementParameterCollection)">
            <summary>
            获取第一行对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="sql">sql语句</param>
            <param name="parameters">查询参数</param>
            <returns>对象</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.SelectFirst``1(System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IDictionary)">
            <summary>
            获取第一行对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="sql">sql语句</param>
            <param name="parameters">查询参数</param>
            <param name="extendParams">指令参数：如timeout</param>
            <returns>对象</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.SelectFirst``1(System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IDictionary,Arch.Data.DbEngine.OperationType)">
            <summary>
            获取第一行对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="sql">sql语句</param>
            <param name="parameters">查询参数</param>
            <param name="extendParams">指令参数：如timeout</param>
            <param name="operationType">操作类型，读写分离，默认从slave库读取</param>
            <returns>对象</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.SelectFirst``1(System.String,System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IDictionary,Arch.Data.DbEngine.OperationType)">
            <summary>
            获取第一行对象
            </summary>
            <typeparam name="T">对象</typeparam>
            <param name="logicDbName">逻辑数据名称</param>
            <param name="sql">sql语句</param>
            <param name="parameters">查询参数</param>
            <param name="extendParams">指令参数：如timeout</param>
            <param name="operationType">操作类型，读写分离，默认从slave库读取</param>
            <returns>对象</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.SelectList``1(Arch.Data.Orm.IQuery)">
            <summary>
            执行查询语句
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="query">查询对象</param>
            <returns>对象集合</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.SelectList``1(Arch.Data.Orm.IQuery,System.Collections.IDictionary)">
            <summary>
            执行查询语句
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="query">查询对象</param>
            <param name="extendParams">指令参数：如timeout</param>
            <returns>对象集合</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.SelectList``1(Arch.Data.Orm.IQuery,System.Collections.IDictionary,Arch.Data.DbEngine.OperationType)">
            <summary>
            执行查询语句
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="query">查询对象</param>
            <param name="extendParams">指令参数：如timeout</param>
            <param name="operationType">操作类型，读写分离，默认从slave库读取</param>
            <returns>对象集合</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.SelectList``1(System.String,Arch.Data.Orm.IQuery,System.Collections.IDictionary,Arch.Data.DbEngine.OperationType)">
            <summary>
            执行查询语句
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="logicDbName">逻辑数据库名称</param>
            <param name="query">查询对象</param>
            <param name="extendParams">指令参数：如timeout</param>
            <param name="operationType">操作类型，读写分离，默认从slave库读取</param>
            <returns>对象集合</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.SelectDataReader(System.String)">
            <summary>
            执行查询语句
            </summary>
            <param name="sql">SQL语句</param>
            <returns>IDataReader</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.SelectDataReader(System.String,Arch.Data.DbEngine.StatementParameterCollection)">
            <summary>
            执行查询语句
            </summary>
            <param name="sql">sql语句</param>
            <param name="parameters">查询参数</param>
            <returns>IDataReader</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.SelectDataReader(System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IDictionary)">
            <summary>
            执行查询语句
            </summary>
            <param name="sql">sql语句</param>
            <param name="parameters">查询参数</param>
            <param name="extendParams">指令扩展属性</param>
            <returns>IDataReader</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.SelectDataReader(System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IDictionary,Arch.Data.DbEngine.OperationType)">
            <summary>
            执行查询语句
            </summary>
            <param name="sql">sql语句</param>
            <param name="parameters">查询参数</param>
            <param name="extendParams">指令扩展属性</param>
            <param name="operationType">操作类型，读写分离，默认从slave库读取</param>
            <returns>IDataReader</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.SelectDataReader(System.String,System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IDictionary,Arch.Data.DbEngine.OperationType)">
            <summary>
            执行查询语句
            </summary>
            <param name="logicDbName">逻辑数据库</param>
            <param name="sql">sql语句</param>
            <param name="parameters">查询参数</param>
            <param name="extendParams">指令扩展属性</param>
            <param name="operationType">操作类型，读写分离，默认从slave库读取</param>
            <returns>IDataReader</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.SelectDataTable(System.String)">
            <summary>
            执行查询语句
            </summary>
            <param name="sql">sql语句</param>
            <returns>DataTable</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.SelectDataTable(System.String,Arch.Data.DbEngine.StatementParameterCollection)">
            <summary>
            执行查询语句
            </summary>
            <param name="sql">sql语句</param>
            <param name="parameters">查询参数</param>
            <returns>DataTable</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.SelectDataTable(System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IDictionary)">
            <summary>
             执行查询语句
            </summary>
            <param name="sql">sql语句</param>
            <param name="parameters">查询参数</param>
            <param name="extendParams">指令的扩展属性</param>
            <returns>DataTable</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.SelectDataTable(System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IDictionary,Arch.Data.DbEngine.OperationType)">
            <summary>
            执行查询语句
            </summary>
            <param name="sql">sql语句</param>
            <param name="parameters">查询参数</param>
            <param name="extendParams">指令的扩展属性 </param>
            <param name="operationType">操作类型，读写分离，默认从slave库读取</param>
            <returns>DataTable</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.SelectDataTable(System.String,System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IDictionary,Arch.Data.DbEngine.OperationType)">
            <summary>
            执行查询语句
            </summary>
            <param name="logicDbName">逻辑数据库</param>
            <param name="sql">sql语句</param>
            <param name="parameters">查询参数</param>
            <param name="extendParams">指令的扩展属性 </param>
            <param name="operationType">操作类型，读写分离，默认从slave库读取</param>
            <returns>DataTable</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.SelectDataSet(System.String)">
            <summary>
            执行查询
            </summary>
            <param name="sql">sql语句</param>
            <returns>DataSet</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.SelectDataSet(System.String,Arch.Data.DbEngine.StatementParameterCollection)">
            <summary>
            执行查询
            </summary>
            <param name="sql">sql语句</param>
            <param name="parameters">查询参数</param>
            <returns>DataSet</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.SelectDataSet(System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IDictionary)">
            <summary>
            执行查询
            </summary>
            <param name="sql">sql语句</param>
            <param name="parameters">查询参数</param>
            <param name="extendParams">指令的扩展属性</param>
            <returns>DataSet</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.SelectDataSet(System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IDictionary,Arch.Data.DbEngine.OperationType)">
            <summary>
            
            </summary>
            <param name="sql">sql语句</param>
            <param name="parameters">查询参数</param>
            <param name="extendParams">指令的扩展属性 </param>
            <param name="operationType">操作类型，读写分离，默认从slave库读取</param>
            <returns>DataSet</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.SelectDataSet(System.String,System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IDictionary,Arch.Data.DbEngine.OperationType)">
            <summary>
            
            </summary>
            <param name="logicDbName">逻辑数据库名称</param>
            <param name="sql">SQL语句</param>
            <param name="parameters">查询参数</param>
            <param name="extendParams">指令的扩展属性</param>
            <param name="operationType">操作类型，读写分离，默认从slave库读取</param>
            <returns>DataSet</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.SelectDataSet``1(Arch.Data.Orm.IQuery)">
            <summary>
            通过dataset查询
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="query">查询对象</param>
            <returns>DataSet</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.SelectDataSet``1(Arch.Data.Orm.IQuery,System.Collections.IDictionary)">
            <summary>
            通过dataset查询
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="query">查询对象</param>
            <param name="extendParams">指令参数：如timeout</param>
            <returns>DataSet</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.SelectDataSet``1(Arch.Data.Orm.IQuery,System.Collections.IDictionary,Arch.Data.DbEngine.OperationType)">
            <summary>
            通过dataset查询
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="query">查询对象</param>
            <param name="extendParams">指令参数：如timeout</param>
            <param name="operationType">操作类型，读写分离，默认从slave库读取</param>
            <returns>DataSet</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.SelectDataSet``1(System.String,Arch.Data.Orm.IQuery,System.Collections.IDictionary,Arch.Data.DbEngine.OperationType)">
            <summary>
            通过dataset查询
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="logicDbName">逻辑数据库</param>
            <param name="query">查询对象</param>
            <param name="extendParams">指令参数：如timeout </param>
            <param name="operationType">操作类型，读写分离，默认从slave库读取</param>
            <returns>DataSet</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.ExecSp(System.String,Arch.Data.DbEngine.StatementParameterCollection)">
            <summary>
            执行存储过程
            </summary>
            <param name="procName">存储过程名称</param>
            <param name="parameters">查询参数</param>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.ExecSp(System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IDictionary)">
            <summary>
            执行存储过程
            </summary>
            <param name="procName">存储过程名称</param>
            <param name="parameters">查询参数</param>
            <param name="extendParams">指令参数：如timeout</param>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.ExecSp(System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IDictionary,Arch.Data.DbEngine.OperationType)">
            <summary>
            执行存储过程
            </summary>
            <param name="procName">存储过程名称</param>
            <param name="parameters">查询参数</param>
            <param name="extendParams">指令参数：如timeout</param>
            <param name="operationType">操作类型，读写分离，默认从slave库读取</param>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.ExecSp(System.String,System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IDictionary,Arch.Data.DbEngine.OperationType)">
            <summary>
            执行存储过程
            </summary>
            <param name="logicDbName">存储过程名称</param>
            <param name="procName">存储过程名称</param>
            <param name="parameters">查询参数</param>
            <param name="extendParams"> 指令参数：如timeout</param>
            <param name="operationType">操作类型，读写分离，默认从slave库读取</param>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.ExecListBySp``1(System.String,Arch.Data.DbEngine.StatementParameterCollection)">
            <summary>
            执行查询存储过程
            </summary>
            <typeparam name="T">结果类型</typeparam>
            <param name="procName">存储过程名称</param>
            <param name="parameters">存储过程参数</param>
            <returns>对象集合</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.ExecListBySp``1(System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IDictionary)">
            <summary>
            执行查询存储过程
            </summary>
            <typeparam name="T">结果类型</typeparam>
            <param name="procName">存储过程名称</param>
            <param name="parameters">存储过程参数</param>
            <param name="extendParams">指令参数：如timeout</param>
            <returns>对象集合</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.ExecListBySp``1(System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IDictionary,Arch.Data.DbEngine.OperationType)">
            <summary>
            执行查询存储过程
            </summary>
            <typeparam name="T">结果类型</typeparam>
            <param name="procName">存储过程名称</param>
            <param name="parameters">存储过程参数</param>
            <param name="extendParams">指令参数：如timeout</param>
            <param name="operationType">操作类型，读写分离，默认从slave库读取</param>
            <returns>对象集合</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.ExecListBySp``1(System.String,System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IDictionary,Arch.Data.DbEngine.OperationType)">
            <summary>
            执行查询存储过程
            </summary>
            <typeparam name="T">结果类型</typeparam>
            <param name="logicDbName">逻辑数据库名称</param>
            <param name="procName">存储过程名称</param>
            <param name="parameters">存储过程参数</param>
            <param name="extendParams">指令参数：如timeout</param>
            <param name="operationType">操作类型，读写分离，默认从slave库读取</param>
            <returns>对象集合</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.ExecDataSetBySp(System.String,Arch.Data.DbEngine.StatementParameterCollection)">
            <summary>
            通过存储过程执行dataset
            </summary>
            <param name="procName">存储过程名称</param>
            <param name="parameters">全部存储过程参数</param>
            <returns>DataSet</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.ExecDataSetBySp(System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IDictionary)">
            <summary>
            通过存储过程执行dataset
            </summary>
            <param name="procName">存储过程名称</param>
            <param name="parameters">查询参数</param>
            <param name="extendParams">指令参数：如timeout</param>
            <returns>DataSet</returns>
        </member>
        <member name="M:Arch.Data.BaseDao.ExecDataSetBySp(System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IDictionary,Arch.Data.DbEngine.OperationType)">
            <summary>
            通过存储过程执行dataset
            </summary>
            <param name="procName">存储过程名称</param>
            <param name="parameters">查询参数</param>
            <param name="extendParams">指令参数：如timeout</param>
            <param name="operationType">操作类型，读写分离，默认从master库读取</param>
            <returns>DataSet</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.ExecDataSetBySp(System.String,System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IDictionary,Arch.Data.DbEngine.OperationType)">
            <summary>
            通过存储过程执行dataset
            </summary>
            <param name="logicDbName">逻辑数据库名称</param>
            <param name="procName">存储过程名称</param>
            <param name="parameters">存储过程参数</param>
            <param name="extendParams">指令参数：如timeout </param>
            <param name="operationType">操作类型，读写分离，默认从master库读取</param>
            <returns>dataset</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.ExecDataTableBySp(System.String,Arch.Data.DbEngine.StatementParameterCollection)">
            <summary>
            通过存储过程执行DataTable
            </summary>
            <param name="procName">存储过程名称</param>
            <param name="parameters">全部存储过程参数</param>
            <returns>DataTable</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.ExecDataTableBySp(System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IDictionary)">
            <summary>
            通过存储过程执行DataTable
            </summary>
            <param name="procName">存储过程名称</param>
            <param name="parameters">全部存储过程参数</param>
            <param name="extendParams">指令参数：如timeout</param>
            <returns>DataTable</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.ExecDataTableBySp(System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IDictionary,Arch.Data.DbEngine.OperationType)">
            <summary>
            通过存储过程执行DataTable
            </summary>
            <param name="procName">存储过程名称</param>
            <param name="parameters">全部存储过程参数</param>
            <param name="extendParams">指令参数：如timeout</param>
            <param name="operationType">操作类型，读写分离，默认从master库读取</param>
            <returns>DataTable</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.ExecDataTableBySp(System.String,System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IDictionary,Arch.Data.DbEngine.OperationType)">
            <summary>
             通过存储过程执行DataTable
            </summary>
            <param name="logicDbName">逻辑数据库名称</param>
            <param name="procName">存储过程名称</param>
            <param name="parameters">全部存储过程参数</param>
            <param name="extendParams">指令参数：如timeout</param>
            <param name="operationType">操作类型，读写分离，默认从master库读取</param>
            <returns>DataTable</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.ExecDataReaderBySp(System.String,Arch.Data.DbEngine.StatementParameterCollection)">
            <summary>
            通过存储过程执行DataReader
            </summary>
            <param name="procName">存储过程名称</param>
            <param name="parameters">存储过程参数</param>
            <returns>DataReader</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.ExecDataReaderBySp(System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IDictionary)">
            <summary>
            通过存储过程执行DataReader
            </summary>
            <param name="procName">存储过程名称</param>
            <param name="parameters">存储过程参数</param>
            <param name="extendParams">指令参数：如timeout</param>
            <returns>IDataReader</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.ExecDataReaderBySp(System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IDictionary,Arch.Data.DbEngine.OperationType)">
            <summary>
            通过存储过程执行DataReader
            </summary>
            <param name="procName">存储过程名称</param>
            <param name="parameters">存储过程参数</param>
            <param name="extendParams">指令参数：如timeout</param>
            <param name="operationType">操作类型，读写分离，默认从master库读取 </param>
            <returns>IDataReader</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.ExecDataReaderBySp(System.String,System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IDictionary,Arch.Data.DbEngine.OperationType)">
            <summary>
            通过存储过程执行DataReader
            </summary>
            <param name="logicDbName">逻辑数据库名称</param>
            <param name="procName">存储过程名称</param>
            <param name="parameters">存储过程参数</param>
            <param name="extendParams">指令参数：如timeout</param>
            <param name="operationType">操作类型，读写分离，默认从master库读取</param>
            <returns>IDataReader</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.ExecScalar(System.String)">
            <summary>
            执行单返回值聚集查询指令
            </summary>
            <param name="sql">sql语句</param>
            <returns>object</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.ExecScalar(System.String,Arch.Data.DbEngine.StatementParameterCollection)">
            <summary>
            执行单返回值聚集查询指令
            </summary>
            <param name="sql">sql语句</param>
            <param name="parameters">查询参数</param>
            <returns>object</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.ExecScalar(System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IDictionary)">
            <summary>
            执行单返回值聚集查询指令
            </summary>
            <param name="sql">sql语句</param>
            <param name="parameters">查询参数</param>
            <param name="extendParams">指令参数：如timeout</param>
            <returns>object</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.ExecScalar(System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IDictionary,Arch.Data.DbEngine.OperationType)">
            <summary>
            执行单返回值聚集查询指令
            </summary>
            <param name="sql">sql语句</param>
            <param name="parameters">查询参数</param>
            <param name="extendParams">指令参数：如timeout</param>
            <param name="operationType">操作类型，读写分离，默认从master库读取</param>
            <returns>object</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.ExecScalar(System.String,System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IDictionary,Arch.Data.DbEngine.OperationType)">
            <summary>
            执行单返回值聚集查询指令
            </summary>
            <param name="logicDbName">逻辑数据库名称</param>
            <param name="sql">sql语句</param>
            <param name="parameters">查询参数</param>
            <param name="extendParams">指令参数：如timeout</param>
            <param name="operationType">操作类型，读写分离，默认从master库读取</param>
            <returns>object</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.ExecNonQuery(System.String)">
            <summary>
            执行非查询指令
            </summary>
            <param name="sql">sql语句</param>
            <returns>影响行数</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.ExecNonQuery(System.String,Arch.Data.DbEngine.StatementParameterCollection)">
            <summary>
            执行非查询指令
            </summary>
            <param name="sql">sql语句</param>
            <param name="parameters">查询参数</param>
            <returns>影响行数</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.ExecNonQuery(System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IDictionary)">
            <summary>
            执行非查询指令
            </summary>
            <param name="sql">sql语句</param>
            <param name="parameters">查询参数</param>
            <param name="extendParams">指令参数：如timeout</param>
            <returns>影响行数</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.ExecNonQuery(System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IDictionary,Arch.Data.DbEngine.OperationType)">
            <summary>
            执行非查询指令
            </summary>
            <param name="sql">sql语句</param>
            <param name="parameters">查询参数</param>
            <param name="extendParams">指令参数：如timeout</param>
            <param name="operationType">操作类型，读写分离，默认从master库读取</param>
            <returns>影响行数</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.BaseDao.ExecNonQuery(System.String,System.String,Arch.Data.DbEngine.StatementParameterCollection,System.Collections.IDictionary,Arch.Data.DbEngine.OperationType)">
            <summary>
            执行非查询指令
            </summary>
            <param name="logicDbName">逻辑数据库名称</param>
            <param name="sql">sql语句</param>
            <param name="parameters">查询参数</param>
            <param name="extendParams">指令参数：如timeout</param>
            <param name="operationType">操作类型，读写分离，默认从master库读取</param>
            <returns>影响行数</returns>
            <exception cref="T:Arch.Data.DalException">数据访问框架异常</exception>
        </member>
        <member name="M:Arch.Data.Orm.FastInvoker.DynamicPropertyInfo.GetValue(System.Object,System.Object[])">
            <summary>
            获取属性值
            </summary>
            <param name="obj">对象</param>
            <param name="index">检索</param>
            <returns></returns>
        </member>
        <member name="T:Arch.Data.DbEngine.MemoryDataReader">
            <summary>
            内存中的DataReader对象
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.MemoryDataReader.m_CurrentResultIndex">
            <summary>
            当前结果集索引
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.MemoryDataReader.m_CurrentRowIndex">
            <summary>
            当前行索引
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.MemoryDataReader.m_IsClosed">
            <summary>
            是否已关闭
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.MemoryDataReader.m_Results">
            <summary>
            当前结果集
            </summary>
        </member>
        <member name="M:Arch.Data.DbEngine.MemoryDataReader.#ctor(System.Data.IDataReader)">
            <summary>
            构造方法
            </summary>
            <param name="reader">数据库返回的DataReader对象</param>
        </member>
        <member name="M:Arch.Data.DbEngine.MemoryDataReader.Close">
            <summary>
            关闭
            </summary>
        </member>
        <member name="M:Arch.Data.DbEngine.MemoryDataReader.Dispose">
            <summary>
            释放
            </summary>
        </member>
        <member name="M:Arch.Data.DbEngine.MemoryDataReader.GetBoolean(System.Int32)">
            <summary>
            获取Boolean值
            </summary>
            <param name="fieldIndex">字段索引</param>
            <returns>字段值</returns>
        </member>
        <member name="M:Arch.Data.DbEngine.MemoryDataReader.GetByte(System.Int32)">
            <summary>
            获取Boolean值
            </summary>
            <param name="fieldIndex">字段索引</param>
            <returns>字段值</returns>
        </member>
        <member name="P:Arch.Data.DbEngine.MemoryDataReader.CurrentResultSet">
            <summary>
            当前结果集
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.MemoryDataReader.Depth">
            <summary>
            结果集深度
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.MemoryDataReader.FieldCount">
            <summary>
            字段数
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.MemoryDataReader.IsClosed">
            <summary>
            是否已经关闭
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.MemoryDataReader.Item(System.Int32)">
            <summary>
            字段索引
            </summary>
            <param name="fieldIndex"></param>
            <returns></returns>
        </member>
        <member name="P:Arch.Data.DbEngine.MemoryDataReader.Item(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:Arch.Data.DbEngine.MemoryDataReader.MemoryResultSet">
            <summary>
            内存结果集
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.MemoryDataReader.MemoryResultSet.m_DataTypeName">
            <summary>
            数据类型名称
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.MemoryDataReader.MemoryResultSet.m_FieldCount">
            <summary>
            字段数量
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.MemoryDataReader.MemoryResultSet.m_FieldsName">
            <summary>
            字段名称
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.MemoryDataReader.MemoryResultSet.m_FieldsNameLookup">
            <summary>
            
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.MemoryDataReader.MemoryResultSet.m_FieldsType">
            <summary>
            字段类型
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.MemoryDataReader.MemoryResultSet.m_Records">
            <summary>
            数据
            </summary>
        </member>
        <member name="T:Arch.Data.DbEngine.Configuration.DatabaseProviderElement">
            <summary>
            数据库提供者
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.Configuration.DatabaseProviderElement.c_NameProperty">
            <summary>
            名称
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.Configuration.DatabaseProviderElement.c_TypeProperty">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.Configuration.DatabaseProviderElement.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.Configuration.DatabaseProviderElement.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.Configuration.DatabaseProviderElement.TypeName">
            <summary>
            类型
            </summary>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlConstraint.GetSql(Arch.Data.Orm.sql.SqlTable,System.Char,System.Char,System.Int32@)">
            <summary>
            
            </summary>
            <param name="table"></param>
            <param name="openQuote"></param>
            <param name="closeQuote"></param>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlConstraint.SetParameters(Arch.Data.DbEngine.StatementParameterCollection)">
            <summary>
            
            </summary>
            <param name="parameters"></param>
        </member>
        <member name="T:Arch.Data.Orm.IQuery`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Arch.Data.Orm.IQuery">
            <summary>
            
            </summary>
        </member>
        <member name="M:Arch.Data.Orm.IQuery.And">
            <summary>
            和操作
            </summary>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.IQuery.Or">
            <summary>
            或操作
            </summary>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.IQuery.Constrain(System.String)">
            <summary>
            包含操作
            </summary>
            <param name="column">列名</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.IQuery.Constrain(Arch.Data.Orm.IQuery)">
            <summary>
            包含操作
            </summary>
            <param name="query">查询对象</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.IQuery.Equal(System.Object)">
            <summary>
            等于操作
            </summary>
            <param name="val">值</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.IQuery.NotEqual(System.Object)">
            <summary>
            不等于操作
            </summary>
            <param name="val">值</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.IQuery.Greater(System.Object)">
            <summary>
            大于操作
            </summary>
            <param name="val">值</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.IQuery.GreaterEqual(System.Object)">
            <summary>
            大于等于操作
            </summary>
            <param name="val">值</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.IQuery.Less(System.Object)">
            <summary>
            小于操作
            </summary>
            <param name="val">值</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.IQuery.LessEqual(System.Object)">
            <summary>
            小于等于操作
            </summary>
            <param name="val">值</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.IQuery.Like(System.String)">
            <summary>
             like操作需要在dao方法内加通配符(%)
            </summary>
            <param name="val">值</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.IQuery.In(System.Collections.IList)">
            <summary>
            在范围内操作
            </summary>
            <param name="values">集合接口</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.IQuery.NotIn(System.Collections.IList)">
            <summary>
            不在范围内操作
            </summary>
            <param name="values">集合接口</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.IQuery.Order(System.String,System.Boolean)">
            <summary>
            排序
            </summary>
            <param name="column">列名</param>
            <param name="ascending">是否升序</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.IQuery.Get(System.Int32)">
            <summary>
            获得约束对象
            </summary>
            <param name="index">索引</param>
            <returns>约束接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.IQuery`1.And">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.IQuery`1.Constrain(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            
            </summary>
            <param name="propertyExpression"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.IQuery`1.Order(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Boolean)">
            <summary>
            
            </summary>
            <param name="propertyExpression"></param>
            <param name="asc"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.IQuery`1.Order(System.String,System.Boolean)">
            <summary>
            排序
            </summary>
            <param name="column">列名</param>
            <param name="ascending">是否升序</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.IQuery`1.Get(System.Int32)">
            <summary>
            获得约束对象
            </summary>
            <param name="index">索引</param>
            <returns>约束接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.IQuery`1.Or">
            <summary>
            或操作
            </summary>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.IQuery`1.Constrain(System.String)">
            <summary>
            包含操作
            </summary>
            <param name="column">列名</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.IQuery`1.Constrain(Arch.Data.Orm.IQuery)">
            <summary>
            包含操作
            </summary>
            <param name="query">查询对象</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.IQuery`1.Equal(System.Object)">
            <summary>
            等于操作
            </summary>
            <param name="val">值</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.IQuery`1.NotEqual(System.Object)">
            <summary>
            不等于操作
            </summary>
            <param name="val">值</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.IQuery`1.Greater(System.Object)">
            <summary>
            大于操作
            </summary>
            <param name="val">值</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.IQuery`1.GreaterEqual(System.Object)">
            <summary>
            大于等于操作
            </summary>
            <param name="val">值</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.IQuery`1.Less(System.Object)">
            <summary>
            小于操作
            </summary>
            <param name="val">值</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.IQuery`1.LessEqual(System.Object)">
            <summary>
            小于等于操作
            </summary>
            <param name="val">值</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.IQuery`1.Like(System.String)">
            <summary>
             like操作需要在dao方法内加通配符(%)
            </summary>
            <param name="val">值</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.IQuery`1.In(System.Collections.IList)">
            <summary>
            在范围内操作
            </summary>
            <param name="values">集合接口</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.IQuery`1.NotIn(System.Collections.IList)">
            <summary>
            不在范围内操作
            </summary>
            <param name="values">集合接口</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Shard.IShardStrategy.SetShardConfig(Arch.Data.DbEngine.Shard.ShardConfig)">
            <summary>
            set shard strategy configration
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:Arch.Data.DbEngine.Shard.IShardStrategy.GetDatabaseListByShardObject(Arch.Data.DbEngine.Shard.ShardObject)">
            <summary>
            get the routing info for a shard query
            null means all_shards
            </summary>
            <param name="sdobj"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Shard.ShardModStrategy.#ctor">
            <summary>
            default construction
            </summary>
        </member>
        <member name="M:Arch.Data.DbEngine.Shard.ShardModStrategy.GetShardingConfigColumns">
            <summary>
            get sharding columns
            </summary>
        </member>
        <member name="M:Arch.Data.DbEngine.Shard.ShardModStrategy.SetShardConfig(Arch.Data.DbEngine.Shard.ShardConfig)">
            <summary>
            override SetShardConfig for pre-parse columns
            </summary>
            <param name="cfg"></param>
        </member>
        <member name="M:Arch.Data.DbEngine.Shard.ShardModStrategy.GetDatabaseListByShardObject(Arch.Data.DbEngine.Shard.ShardObject)">
            <summary>
            perform shard strategy (MOD)
            </summary>
            <param name="sdobj"></param>
            <returns></returns>
        </member>
        <member name="T:Arch.Data.DbEngine.Providers.OleDatabaseProvider">
            <summary>
            Sql Server 数据库提供者实现
            </summary>
        </member>
        <member name="M:Arch.Data.DbEngine.Providers.OleDatabaseProvider.CreateConnection">
            <summary>
            创建数据库链接
            </summary>
            <returns>数据库链接</returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Providers.OleDatabaseProvider.CreateCommand">
            <summary>
            创建数据库指令
            </summary>
            <returns>数据库指令</returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Providers.OleDatabaseProvider.CreateParameterName(System.String)">
            <summary>
            创建数据库参数合法名称
            </summary>
            <param name="name">数据库参数名称</param>
            <returns>据库参数合法名称</returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Providers.OleDatabaseProvider.CreateDataAdapter">
            <summary>
            创建数据库适配器
            </summary>
            <returns>数据库适配器</returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Providers.OleDatabaseProvider.DeriveParameters(System.Data.Common.DbCommand)">
            <summary>
            导出数据库指令参数
            </summary>
            <param name="command">数据库指令</param>
        </member>
        <member name="P:Arch.Data.DbEngine.Providers.OleDatabaseProvider.DeriveParametersSupported">
            <summary>
            是否支持导出数据库指令参数
            </summary>
        </member>
        <member name="P:Arch.Data.Common.Logging.LogPolicy.Encrypt">
            <summary>
            whether encrypt the SQL parameters
            "yes": 3, encrypt in/out
            "in" : 1, encrypt in
            "out": 2, encrypt out
            "none" 0, encrypt neither
            </summary>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlTableFactory.Build">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlTableFactory.Build(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlTableFactory.Build(System.String,System.Type)">
            <summary>
            
            </summary>
            <param name="prefixName"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="P:Arch.Data.DbEngine.Shard.ShardConfig.ShardingParams">
            <summary>
            get sharding configure parameters
            </summary>
        </member>
        <member name="T:Arch.Data.DbEngine.Configuration.DatabaseElement">
            <summary>
            物理数据库链接配置元素
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.Configuration.DatabaseElement.c_NameProperty">
            <summary>
            名称
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.Configuration.DatabaseElement.c_DatabaseTypeProperty">
            <summary>
            数据库主从类型
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.Configuration.DatabaseElement.c_ShardingProperty">
            <summary>
            分片标识
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.Configuration.DatabaseElement.c_RatioProperty">
            <summary>
            调用权重
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.Configuration.DatabaseElement.c_ConnectionStringProperty">
            <summary>
            链接字符串名称
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.Configuration.DatabaseElement.Name">
            <summary>
            名称,关键字
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.Configuration.DatabaseElement.Ratio">
            <summary>
            从库访问权重
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.Configuration.DatabaseElement.DatabaseType">
            <summary>
            数据库主从类型
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.Configuration.DatabaseElement.Sharding">
            <summary>
            分片标识
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.Configuration.DatabaseElement.ConnectionString">
            <summary>
            链接字符串名称
            </summary>
        </member>
        <member name="T:Arch.Data.Orm.Dialect.MySqlDialect">
            <summary>
            mysql方言
            </summary>
        </member>
        <member name="M:Arch.Data.Orm.Dialect.MySqlDialect.QuoteParameter(System.String)">
            <summary>
            拼接参数
            </summary>
        </member>
        <member name="M:Arch.Data.Orm.Dialect.MySqlDialect.QuoteOpenOpName(System.String)">
            <summary>
            拼接操作头部
            </summary>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.Dialect.MySqlDialect.QuoteCloseOpName">
            <summary>
            拼接操作尾部
            </summary>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.Dialect.MySqlDialect.WithLock(System.String)">
            <summary>
            加锁类型值
            </summary>
            <returns></returns>
        </member>
        <member name="T:Arch.Data.Common.Logging.EnumItem">
            <summary>
            枚举条目信息
            </summary>
        </member>
        <member name="M:Arch.Data.Common.Logging.EnumItem.#ctor(System.Int32,System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="value"></param>
            <param name="name"></param>
            <param name="description"></param>
        </member>
        <member name="P:Arch.Data.Common.Logging.EnumItem.Value">
            <summary>
            枚举值
            </summary>
        </member>
        <member name="P:Arch.Data.Common.Logging.EnumItem.Description">
            <summary>
            枚举说明
            </summary>
        </member>
        <member name="P:Arch.Data.Common.Logging.EnumItem.Name">
            <summary>
            枚举名
            </summary>
        </member>
        <member name="T:Arch.Data.Common.Logging.Listeners.ConsoleListener">
            <summary>
            控制台侦听器
            </summary>
        </member>
        <member name="T:Arch.Data.Common.Logging.ListenerManager">
            <summary>
            侦听器管理器
            </summary>
        </member>
        <member name="M:Arch.Data.Common.Logging.ListenerManager.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:Arch.Data.Common.Logging.ListenerManager.#ctor(System.Collections.Generic.IEnumerable{Arch.Data.Common.Logging.IListener})">
            <summary>
            构造方法
            </summary>
            <param name="listeners">侦听器</param>
        </member>
        <member name="M:Arch.Data.Common.Logging.ListenerManager.Finalize">
            <summary>
            析构器
            </summary>
        </member>
        <member name="M:Arch.Data.Common.Logging.ListenerManager.Dispose(System.Boolean)">
            <summary>
            真正的资源释放程序
            </summary>
            <param name="isDisposing">是否正在主动释放</param>
        </member>
        <member name="M:Arch.Data.Common.Logging.ListenerManager.Dispose">
            <summary>
            显示释放
            </summary>
        </member>
        <member name="M:Arch.Data.Common.Logging.ListenerManager.AddListener(Arch.Data.Common.Logging.IListener)">
            <summary>
            添加侦听器
            </summary>
            <param name="listener">侦听器</param>
        </member>
        <member name="M:Arch.Data.Common.Logging.ListenerManager.Log(Arch.Data.Common.Logging.LogEntry)">
            <summary>
            日志
            </summary>
            <param name="logEntry">日志项</param>
        </member>
        <member name="T:Arch.Data.Common.Logging.Configuration.ListenerElementCollection">
            <summary>
            日志侦听器集合
            </summary>
        </member>
        <member name="M:Arch.Data.GenericSingleton`1.createInstance">
            <summary>
            Create an instance of the specified type.
            </summary>
        </member>
        <member name="T:Arch.Data.DbEngine.DbEngineException">
            <summary>
            数据库引擎异常
            </summary>
        </member>
        <member name="M:Arch.Data.DbEngine.DbEngineException.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:Arch.Data.DbEngine.DbEngineException.#ctor(System.Exception)">
            <summary>
            构造方法
            </summary>
            <param name="ex">内部异常</param>
        </member>
        <member name="M:Arch.Data.DbEngine.DbEngineException.#ctor(System.String)">
            <summary>
            构造方法
            </summary>
            <param name="message">异常消息</param>
        </member>
        <member name="M:Arch.Data.DbEngine.DbEngineException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            构造方法
            </summary>
            <param name="info">序列化信息</param>
            <param name="context">上下文</param>
        </member>
        <member name="M:Arch.Data.DbEngine.DbEngineException.#ctor(System.String,System.Exception)">
            <summary>
            构造方法
            </summary>
            <param name="message">异常消息</param>
            <param name="inner">内部异常</param>
        </member>
        <member name="T:Arch.Data.DbEngine.Database">
            <summary>
            物理数据库对象
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.Database.m_ConnectionString">
            <summary>
            数据库链接
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.Database.m_DatabaseProvider">
            <summary>
            数据库提供者对象
            </summary>
        </member>
        <member name="M:Arch.Data.DbEngine.Database.#ctor(System.String,Arch.Data.DbEngine.IDatabaseProvider)">
            <summary>
            构造方法
            </summary>
            <param name="connectionStringName">数据库链接名称</param>
            <param name="databaseProvider">数据库提供者</param>
        </member>
        <member name="M:Arch.Data.DbEngine.Database.#ctor(System.String,System.String,Arch.Data.DbEngine.IDatabaseProvider)">
            <summary>
            构造方法
            </summary>
            <param name="connectionStringName">数据库链接名称</param>
            <param name="databaseProvider">数据库提供者</param>
        </member>
        <member name="M:Arch.Data.DbEngine.Database.GetOpenConnection(System.Boolean)">
            <summary>
            获取打开的数据库链接
            </summary>
            <param name="disposeInnerConnection">是否释放数据库链接对象</param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Database.CreateConnection">
            <summary>
            创建数据库链接
            </summary>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Database.PrepareCommand(Arch.Data.DbEngine.Statement)">
            <summary>
            准备数据库指令
            </summary>
            <param name="statement">上层指令</param>
            <returns>数据库指令</returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Database.UpdateStatementParamenters(Arch.Data.DbEngine.Statement,System.Data.Common.DbCommand)">
            <summary>
            更新执行后的参数
            </summary>
            <param name="statement">指令</param>
            <param name="command">数据库指令</param>
        </member>
        <member name="M:Arch.Data.DbEngine.Database.LoadDataSet(System.Data.Common.DbCommand,System.Data.DataSet,System.String[])">
            <summary>
            加载程序集
            </summary>
            <param name="command">指令</param>
            <param name="dataSet">程序集</param>
            <param name="tableNames">表名称</param>
        </member>
        <member name="M:Arch.Data.DbEngine.Database.ExecuteDataSet(Arch.Data.DbEngine.Statement,System.String[])">
            <summary>
            执行返回数据集指令
            </summary>
            <param name="statement">指令</param>
            <param name="tableNames">填充表名称</param>
            <returns>数据集</returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Database.ExecuteNonQuery(Arch.Data.DbEngine.Statement)">
            <summary>
            执行非查询指令
            </summary>
            <param name="statement">指令</param>
            <returns>影响行数</returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Database.ExecuteReader(Arch.Data.DbEngine.Statement)">
            <summary>
            执行返回单向只读数据集的指令
            </summary>
            <param name="statement">指令</param>
            <returns>单向只读DataReader对象</returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Database.ExecuteScalar(Arch.Data.DbEngine.Statement)">
            <summary>
            执行单返回值聚集查询指令
            </summary>
            <param name="statement">指令</param>
            <returns>聚集结果</returns>
        </member>
        <member name="P:Arch.Data.DbEngine.Database.ConnectionString">
            <summary>
            数据库链接
            </summary>
        </member>
        <member name="T:Arch.Data.DbEngine.Database.ConnectionWrapper">
            <summary>
            数据库链接包装器
            控制数据库链接
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.Database.ConnectionWrapper.m_Connection">
            <summary>
            真正的数据库链接
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.Database.ConnectionWrapper.m_DisposeConnection">
            <summary>
            是否释放链接
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.Database.ConnectionWrapper.m_Disposed">
            <summary>
            是否已释放
            </summary>
        </member>
        <member name="M:Arch.Data.DbEngine.Database.ConnectionWrapper.#ctor(System.Data.Common.DbConnection,System.Boolean)">
            <summary>
            构造方法
            </summary>
            <param name="connection">数据库链接</param>
            <param name="disposeConnection">是否释放链接</param>
        </member>
        <member name="M:Arch.Data.DbEngine.Database.ConnectionWrapper.Dispose(System.Boolean)">
            <summary>
            释放链接
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.Database.ConnectionWrapper.Connection">
            <summary>
            数据库链接
            </summary>
        </member>
        <member name="T:Arch.Data.DbEngine.Database.TransactionConnectionManager">
            <summary>
            对于相同的数据库,在同一个事务中,只打开一个数据库链接
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.Database.TransactionConnectionManager.s_TransactionConnections">
            <summary>
            已加入事务链接
            </summary>
        </member>
        <member name="M:Arch.Data.DbEngine.Database.TransactionConnectionManager.GetConnection(Arch.Data.DbEngine.Database)">
            <summary>
            获取数据库链接
            当在同一个事务中的时候获取到的相同数据库的链接应该是一个对象
            避免分布式事务,仅支持TransactionScope
            </summary>
            <param name="db"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Database.TransactionConnectionManager.OnTransactionCompleted(System.Object,System.Transactions.TransactionEventArgs)">
            <summary>
            事务完成事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Arch.Data.DbEngine.Shard.ShardAggragationFuncsExtension.Sum(System.Data.DataTable,System.String[])">
            <summary>
            多列名聚合， 没有groupby
            </summary>
            <param name="dtsource"></param>
            <param name="columnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Shard.ShardAggragationFuncsExtension.Avg(System.Data.DataTable,System.String[])">
            <summary>
            多列名聚合,没有groupby
            </summary>
            <param name="dtsource"></param>
            <param name="columnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Shard.ShardAggragationFuncsExtension.Count(System.Data.DataTable,System.String[])">
            <summary>
            多列名聚合,没有groupby
            </summary>
            <param name="dtsource"></param>
            <param name="columnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Shard.ShardAggragationFuncsExtension.Min(System.Data.DataTable,System.String[])">
            <summary>
            多列名聚合,没有groupby
            </summary>
            <param name="dtsource"></param>
            <param name="columnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Shard.ShardAggragationFuncsExtension.Max(System.Data.DataTable,System.String[])">
            <summary>
            多列名聚合,没有groupby
            </summary>
            <param name="dtsource"></param>
            <param name="columnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Shard.ShardAggragationFuncsExtension.Sum(System.Data.DataTable,System.String)">
            <summary>
            单列名聚合,没有groupby
            </summary>
            <param name="dtsource"></param>
            <param name="columnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Shard.ShardAggragationFuncsExtension.Avg(System.Data.DataTable,System.String)">
            <summary>
            多列名聚合,没有groupby
            </summary>
            <param name="dtsource"></param>
            <param name="columnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Shard.ShardAggragationFuncsExtension.Count(System.Data.DataTable,System.String)">
            <summary>
            单列名聚合,没有groupby
            </summary>
            <param name="dtsource"></param>
            <param name="columnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Shard.ShardAggragationFuncsExtension.Min(System.Data.DataTable,System.String)">
            <summary>
            单
            列名聚合,没有groupby
            </summary>
            <param name="dtsource"></param>
            <param name="columnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Shard.ShardAggragationFuncsExtension.Max(System.Data.DataTable,System.String)">
            <summary>
            单列名聚合
            </summary>
            <param name="dtsource"></param>
            <param name="columnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Shard.ShardAggragationFuncsExtension.AggregateFunc(System.Data.DataTable,System.String,System.String[])">
            <summary>
            聚合函数操作
            </summary>
            <param name="dtsource"></param>
            <param name="operationType">聚合函数类型</param>
            <param name="columnIndex">聚合的列</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Shard.ShardAggragationFuncsExtension.OrderBy(System.Data.DataTable,System.String,System.String[])">
            <summary>
            orderby 排序
            </summary>
            <param name="dtsource">排序源表</param>
            <param name="sortOrder">排序方式ASC、DESC</param>
            <param name="columnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Shard.ShardAggragationFuncsExtension.GroupBy(System.Data.DataTable,System.String,System.String[],System.String[])">
            <summary>
            Group by 函数 其中包含了支持的sum, count, max, min,avg,五种聚合函数，在operationType中需要告知groupby使用的是那种类型的聚合函数
            </summary>
            <param name="dtsource"></param>
            <param name="operationType">聚合函数名[Sum][Max][Min][Count][Sum][Avg] 请注意大小写，目前函数的输入只使用首字母大写</param>
            <param name="groupBycolumnIndex">需要聚合的列名如：sum(UserId)、count(priceId)</param>
            <param name="aggregatecolumns">被聚合的列 select userid,prize,categoryId, sum(Cost) from prizeinfo group by userid,prize,categoryId  其中userid,prize,categoryId 被称为聚合列，执行时候必须严格验证sql语法</param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Shard.ShardAggragationFuncsExtension.SelectTop(System.Data.DataTable,System.Int32)">
            <summary>
            select Top
            </summary>
            <param name="top">需要取出的最大值的行数</param>
            <param name="sourcedt"></param>
            <returns></returns>
        </member>
        <member name="T:Arch.Data.DbEngine.Configuration.DatabaseElementCollection">
            <summary>
            数据库集集合
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.Configuration.DatabaseElementCollection.s_Properties">
            <summary>
            属性集合
            </summary>
        </member>
        <member name="M:Arch.Data.DbEngine.Configuration.DatabaseElementCollection.#cctor">
            <summary>
            静态构造
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.Shard.ShardStrategyFactory.strategyCache">
            <summary>
            strategy class name : strategy object
            </summary>
        </member>
        <member name="M:Arch.Data.DbEngine.Shard.ShardStrategyFactory.GetShardStrategy(Arch.Data.DbEngine.Shard.ShardConfig)">
            <summary>
            get shard strategy object via shard config
            </summary>
            <param name="config"></param>
            <returns></returns>
        </member>
        <member name="F:Arch.Data.Common.Metrics.CentralLoggingMetricsHandler.metricsLogger">
            <summary>
            Central Logging Metrics API handler
            </summary>
        </member>
        <member name="M:Arch.Data.Common.Metrics.CentralLoggingMetricsHandler.log(System.String,System.Int64,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            发送统计数据，long类型
            </summary>
            <param name="metricName">统计数据名称</param>
            <param name="value">值</param>
            <param name="tags"></param>
        </member>
        <member name="M:Arch.Data.Common.Metrics.CentralLoggingMetricsHandler.log(System.String,System.Single,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            发送统计数据，float类型
            </summary>
            <param name="metricName">统计数据名称</param>
            <param name="value">值</param>
            <param name="tags"></param>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlQuery.#ctor(Arch.Data.Orm.sql.SqlTable)">
            <summary>
            sql查询
            </summary>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlQuery.Order``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean)">
            <summary>
            排序排序
            </summary>
            <typeparam name="T">dao的实体对象</typeparam>
            <param name="propertyExpression">属性的表达式</param>
            <param name="asc">是否升序 </param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlQuery.Get(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlQuery.Constrain(Arch.Data.Orm.IQuery)">
            <summary>
            包含
            </summary>
            <param name="query">查询对象</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlQuery.And">
            <summary>
            和
            </summary>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlQuery.Or">
            <summary>
            或
            </summary>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlQuery.In(System.Collections.IList)">
            <summary>
            里
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlQuery.NotIn(System.Collections.IList)">
            <summary>
            不在里
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlQuery.Equal(System.Object)">
            <summary>
            等于
            </summary>
            <param name="val">值</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlQuery.NotEqual(System.Object)">
            <summary>
            不等于
            </summary>
            <param name="val">值</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlQuery.Greater(System.Object)">
            <summary>
            大于
            </summary>
            <param name="val">值</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlQuery.GreaterEqual(System.Object)">
            <summary>
            大于等于
            </summary>
            <param name="val">值</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlQuery.Less(System.Object)">
            <summary>
            小于
            </summary>
            <param name="val">值</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlQuery.LessEqual(System.Object)">
            <summary>
            小于等于
            </summary>
            <param name="val">值</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlQuery.Like(System.String)">
            <summary>
            like操作需要在dao方法内加通配符(%)
            </summary>
            <param name="val">值</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlQuery.Order(System.String,System.Boolean)">
            <summary>
            排序
            </summary>
            <param name="column">列名</param>
            <param name="asc">是否升序</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlQuery.GetSql(Arch.Data.Orm.sql.SqlTable,System.Char,System.Char,System.Int32@)">
            <summary>
            获得sql语句
            </summary>
            <param name="table"></param>
            <param name="openQuote"></param>
            <param name="closeQuote"></param>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlQuery.SetParameters(Arch.Data.DbEngine.StatementParameterCollection)">
            <summary>
            
            </summary>
            <param name="parameters"></param>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlQuery.GetSql(Arch.Data.Orm.sql.SqlTable,System.Char,System.Char)">
            <summary>
            
            </summary>
            <param name="table"></param>
            <param name="openQuote"></param>
            <param name="closeQuote"></param>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlQuery`1.And">
            <summary>
            与操作
            </summary>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlQuery`1.Or">
            <summary>
            或操作
            </summary>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlQuery`1.Constrain(System.String)">
            <summary>
            包含操作
            </summary>
            <param name="column">列名</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlQuery`1.Constrain(Arch.Data.Orm.IQuery)">
            <summary>
            包含操作
            </summary>
            <param name="query">查询对象</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlQuery`1.Equal(System.Object)">
            <summary>
            等于操作
            </summary>
            <param name="val">值</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlQuery`1.NotEqual(System.Object)">
            <summary>
            不等于操作
            </summary>
            <param name="val">值</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlQuery`1.Greater(System.Object)">
            <summary>
            大于操作
            </summary>
            <param name="val">值</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlQuery`1.GreaterEqual(System.Object)">
            <summary>
            大于等于操作
            </summary>
            <param name="val">值</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlQuery`1.Less(System.Object)">
            <summary>
            小于操作
            </summary>
            <param name="val">值</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlQuery`1.LessEqual(System.Object)">
            <summary>
            小于等于操作
            </summary>
            <param name="val">值</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlQuery`1.Like(System.String)">
            <summary>
             like操作需要在dao方法内加通配符(%)
            </summary>
            <param name="val">值</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlQuery`1.In(System.Collections.IList)">
            <summary>
            在范围内操作
            </summary>
            <param name="values">集合接口</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlQuery`1.NotIn(System.Collections.IList)">
            <summary>
            不在范围内操作
            </summary>
            <param name="values">集合接口</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="M:Arch.Data.Orm.sql.SqlQuery`1.Order(System.String,System.Boolean)">
            <summary>
            排序
            </summary>
            <param name="column">列名</param>
            <param name="ascending">是否升序</param>
            <returns>查询对象接口</returns>
        </member>
        <member name="T:Arch.Data.DbEngine.ConnectionStringHelper">
            <summary>
            Ctrip连接字符串解密处理
            通过反射现有企业库而得
            </summary>
        </member>
        <member name="M:Arch.Data.DbEngine.ConnectionStringHelper.GetDecryptConnectionString(System.String)">
            <summary>
            解密链接字符串
            </summary>
            <param name="connectionString">链接字符串</param>
            <returns>解密后的链接字符串</returns>
        </member>
        <member name="F:Arch.Data.Orm.sql.PropertyBridge.field">
            <summary>
            直接赋值
            </summary>
        </member>
        <member name="F:Arch.Data.Orm.sql.PropertyBridge.sor">
            <summary>
            动态方法+emit
            </summary>
        </member>
        <member name="T:Arch.Data.DbEngine.StatementType">
            <summary>
            Sql指令类型
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.StatementType.Sql">
            <summary>
            Sql语句
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.StatementType.StoredProcedure">
            <summary>
            存贮过程
            </summary>
        </member>
        <member name="T:Arch.Data.DbEngine.Configuration.DbEngineConfigurationSection">
            <summary>
            数据库引擎配置节
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.Configuration.DbEngineConfigurationSection.SectionName">
            <summary>
            Db引擎配置节名称
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.Configuration.DbEngineConfigurationSection.m_DatabaseSets">
            <summary>
            数据库集配置集合
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.Configuration.DbEngineConfigurationSection.m_DatabaseProviders">
            <summary>
            数据库提供者配置集合
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.Configuration.DbEngineConfigurationSection.m_LogListeners">
            <summary>
            日志监听器配置集合
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.Configuration.DbEngineConfigurationSection.m_Metrics">
            <summary>
            统计配置
            </summary>
        </member>
        <member name="M:Arch.Data.DbEngine.Configuration.DbEngineConfigurationSection.#ctor">
            <summary>
            构造方法
            </summary>
        </member>
        <member name="M:Arch.Data.DbEngine.Configuration.DbEngineConfigurationSection.GetConfig">
            <summary>
            获取Db引擎配置节配置节
            </summary>
            <returns></returns>
        </member>
        <member name="P:Arch.Data.DbEngine.Configuration.DbEngineConfigurationSection.DatabaseSets">
            <summary>
            数据库集配置数组
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.Configuration.DbEngineConfigurationSection.DatabaseProviders">
            <summary>
            数据库提供者配置数组
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.Configuration.DbEngineConfigurationSection.LogListeners">
            <summary>
            数据库提供者配置数组
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.Configuration.DbEngineConfigurationSection.Metrics">
            <summary>
            数据库提供者配置数组
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.Configuration.DbEngineConfigurationSection.Name">
            <summary>
            名称,关键字
            </summary>
        </member>
        <member name="T:Arch.Data.DbEngine.Configuration.DatabaseSetElement">
            <summary>
            数据库集配置元素
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.Configuration.DatabaseSetElement.c_NameProperty">
            <summary>
            名称
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.Configuration.DatabaseSetElement.c_ProviderProperty">
            <summary>
            提供者名称
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.Configuration.DatabaseSetElement.c_ShardStrategyProperty">
            <summary>
            分片策略
            </summary>
        </member>
        <member name="M:Arch.Data.DbEngine.Configuration.DatabaseSetElement.ShardConfigParser(System.String)">
            <summary>
            解析shard config 字符串
            </summary>
            <param name="shardStrategyconfigString"></param>
            <returns>ShardConfig</returns>
        </member>
        <member name="P:Arch.Data.DbEngine.Configuration.DatabaseSetElement.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.Configuration.DatabaseSetElement.Provider">
            <summary>
            提供者名称
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.Configuration.DatabaseSetElement.Databases">
            <summary>
            数据库sharding策略配置项
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.Configuration.DatabaseSetElement.ShardStrategy">
            <summary>
            shardStrategyClass属性 
            </summary>
        </member>
        <member name="M:Arch.Data.Common.Logging.LogSamplingHelper.Validate(Arch.Data.Common.Logging.LogEntry,System.TimeSpan,System.TimeSpan)">
            <summary>
            检验该日志是否可以发送
            </summary>
            <param name="entry"></param>
            <returns>true表可以发送
            false 表不可以发送</returns>
        </member>
        <member name="M:Arch.Data.Common.Logging.LogSamplingHelper.clearCache(System.DateTime,System.TimeSpan)">
            <summary>
            to clear the cache when:
            #1. cache size > 5000
            #2. more requests than 5000 come in after #1 matches
            
            only clear the timeout entry
            
            只清除超时的
            </summary>
        </member>
        <member name="T:Arch.Data.Common.Logging.LogLevel">
            <summary>
            日志级别
            不同的日志侦听器日志不同级别的日志
            </summary>
        </member>
        <member name="F:Arch.Data.Common.Logging.LogLevel.Information">
            <summary>
            信息
            </summary>
        </member>
        <member name="F:Arch.Data.Common.Logging.LogLevel.Warning">
            <summary>
            警告
            </summary>
        </member>
        <member name="F:Arch.Data.Common.Logging.LogLevel.Error">
            <summary>
            异常
            </summary>
        </member>
        <member name="F:Arch.Data.Common.Logging.LogLevel.Critical">
            <summary>
            严重异常
            </summary>
        </member>
        <member name="T:Arch.Data.Common.Logging.LogEntry">
            <summary>
            日志对象
            </summary>
        </member>
        <member name="F:Arch.Data.Common.Logging.LogEntry.m_TimeStamp">
            <summary>
            创建时间戳
            </summary>
        </member>
        <member name="F:Arch.Data.Common.Logging.LogEntry.m_Machine">
            <summary>
            调用机器名称
            </summary>
        </member>
        <member name="F:Arch.Data.Common.Logging.LogEntry.m_InputParameters">
            <summary>
            输入参数
            对input特殊处理：inputoutput参数在执行前后值会不同
            </summary>
        </member>
        <member name="M:Arch.Data.Common.Logging.LogEntry.#ctor">
            <summary>
            构造方法
            </summary>
            <param name="logSource">日志来源</param>
        </member>
        <member name="M:Arch.Data.Common.Logging.LogEntry.ToString">
            <summary>
            获取LogEntry字符串表示
            </summary>
            <returns></returns>
        </member>
        <member name="M:Arch.Data.Common.Logging.LogEntry.ToBrief">
            <summary>
            获取LogEntry字符串概要表示，用于Central Logging等本身已生成date, appid, machine, level等字段的日志工具
            </summary>
            <returns></returns>
        </member>
        <member name="P:Arch.Data.Common.Logging.LogEntry.LogName">
            <summary>
            日志名称
            </summary>
        </member>
        <member name="P:Arch.Data.Common.Logging.LogEntry.LogSource">
            <summary>
            日志来源
            </summary>
        </member>
        <member name="P:Arch.Data.Common.Logging.LogEntry.Level">
            <summary>
            日志级别
            </summary>
        </member>
        <member name="P:Arch.Data.Common.Logging.LogEntry.Duration">
            <summary>
            持续时间
            </summary>
        </member>
        <member name="P:Arch.Data.Common.Logging.LogEntry.TimeStamp">
            <summary>
            时间戳
            </summary>
        </member>
        <member name="P:Arch.Data.Common.Logging.LogEntry.EventID">
            <summary>
            事件编号
            </summary>
        </member>
        <member name="P:Arch.Data.Common.Logging.LogEntry.Machine">
            <summary>
            机器名称
            </summary>
        </member>
        <member name="P:Arch.Data.Common.Logging.LogEntry.Message">
            <summary>
            日志详情
            </summary>
        </member>
        <member name="P:Arch.Data.Common.Logging.LogEntry.SQLStatement">
            <summary>
            SQL Statement 
            </summary>
        </member>
        <member name="P:Arch.Data.Common.Logging.LogEntry.InputParameters">
            <summary>
            输入参数
            </summary>
        </member>
        <member name="F:Arch.Data.Common.Logging.Configuration.ListenerElement.c_NameProperty">
            <summary>
            名称
            </summary>
        </member>
        <member name="F:Arch.Data.Common.Logging.Configuration.ListenerElement.c_TypeProperty">
            <summary>
            类型
            </summary>
        </member>
        <member name="F:Arch.Data.Common.Logging.Configuration.ListenerElement.c_LevelProperty">
            <summary>
            日志级别
            </summary>
        </member>
        <member name="F:Arch.Data.Common.Logging.Configuration.ListenerElement.c_SettingProperty">
            <summary>
            初始化配置
            </summary>
        </member>
        <member name="P:Arch.Data.Common.Logging.Configuration.ListenerElement.Name">
            <summary>
            名称,关键字
            </summary>
        </member>
        <member name="P:Arch.Data.Common.Logging.Configuration.ListenerElement.Level">
            <summary>
            级别
            </summary>
        </member>
        <member name="P:Arch.Data.Common.Logging.Configuration.ListenerElement.TypeName">
            <summary>
            类型名称
            </summary>
        </member>
        <member name="P:Arch.Data.Common.Logging.Configuration.ListenerElement.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:Arch.Data.Common.Logging.Configuration.ListenerElement.Setting">
            <summary>
            初始化配置
            </summary>
        </member>
        <member name="T:Arch.Data.DbEngine.OperationType">
            <summary>
            读写分离时用来区分操作类型
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.OperationType.Default">
            <summary>
            未指定，默认为主数据库，即可读可写
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.OperationType.Read">
            <summary>
            读操作
            </summary>
        </member>
        <member name="F:Arch.Data.DbEngine.OperationType.Write">
            <summary>
            写操作
            </summary>
        </member>
        <member name="M:Arch.Data.DbEngine.Providers.OdbcDatabaseProvider.CreateConnection">
            <summary>
            创建数据库链接
            </summary>
            <returns>数据库链接</returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Providers.OdbcDatabaseProvider.CreateCommand">
            <summary>
            创建数据库指令
            </summary>
            <returns>数据库指令</returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Providers.OdbcDatabaseProvider.CreateParameterName(System.String)">
            <summary>
            创建数据库参数合法名称
            </summary>
            <param name="name">数据库参数名称</param>
            <returns>据库参数合法名称</returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Providers.OdbcDatabaseProvider.CreateDataAdapter">
            <summary>
            创建数据库适配器
            </summary>
            <returns>数据库适配器</returns>
        </member>
        <member name="M:Arch.Data.DbEngine.Providers.OdbcDatabaseProvider.DeriveParameters(System.Data.Common.DbCommand)">
            <summary>
            导出数据库指令参数
            </summary>
            <param name="command">数据库指令</param>
        </member>
        <member name="P:Arch.Data.DbEngine.Providers.OdbcDatabaseProvider.DeriveParametersSupported">
            <summary>
            是否支持导出数据库指令参数
            </summary>
        </member>
        <member name="T:Arch.Data.Common.Logging.Listeners.TextFileListener">
            <summary>
            文本文件日志侦听器
            </summary>
        </member>
        <member name="M:Arch.Data.Common.Logging.Listeners.TextFileListener.Init(System.String,Arch.Data.Common.Logging.LogLevel,System.String)">
            <summary>
            初始化
            </summary>
            <param name="config">配置项</param>
        </member>
        <member name="P:Arch.Data.Common.Logging.Listeners.TextFileListener.FileNamePattern">
            <summary>
            文本文件名称
            </summary>
        </member>
        <member name="T:Arch.Data.DbEngine.StatementParameter">
            <summary>
            指令参数
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.StatementParameter.DbType">
            <summary>
            数据类型
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.StatementParameter.ExtandTypeValue">
            <summary>
            扩展数据类型,例如sqldbtype
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.StatementParameter.ExtandType">
            <summary>
            1: sqltype
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.StatementParameter.Direction">
            <summary>
            参数方向
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.StatementParameter.IsNullable">
            <summary>
            是否可空
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.StatementParameter.Name">
            <summary>
            参数名称
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.StatementParameter.Size">
            <summary>
            大小
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.StatementParameter.Value">
            <summary>
            参数值
            </summary>
        </member>
        <member name="P:Arch.Data.DbEngine.StatementParameter.IsSensitive">
            <summary>
            参数值
            </summary>
        </member>
    </members>
</doc>
